/**
 * Copyright (C) 2011 Paul Wortmann, PhysHex Games, www.physhexgames.co.nr
 * This file is part of Star.P.G.
 *
 * Star.P.G. is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Star.P.G. is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Star.P.G. If not, see <http://www.gnu.org/licenses/>.
 *
 * @author Paul Wortmann
 * @license GPL
 */

#include <GL/gl.h>
#include "menu_system.hpp"
#include "game.hpp"
#include "RAGE/rage.hpp"
#include "load_resources.hpp"
#include "levels.hpp"

extern  game_class               game;
extern  sound_type               sound;
extern  music_type               music;
extern  texture_type             texture;
extern  font_type                font;
extern  game_type                game_o;
        menu_type                menu;
        menu_class               main_menu(9);
        menu_class               star_map_menu(9);
        menu_class               customize_starship_menu(9);
        menu_class               achievements_menu(9);
        menu_class               save_menu(9);
        menu_class               load_menu(9);
        menu_class               options_menu(9);
        menu_class               game_over_menu(1);
        menu_class               next_level_menu(1);
        menu_class               outro_menu(1);
        menu_class               pause_menu(1);

int init_menu   (void)
{
    //------ setup menu background -----------
    game.background.set_data ( 1, 1, 0, 1.0f, 0.0f, 0.0005f, 0.00040f, 63);
    game.background.set_data ( 2, 1, 1, 0.0f, 1.0f, 0.0010f, 0.00095f, 64);
    game.background.set_movement_type(BOUNCE);
    //------ setup "main" menu -----------
    main_menu.set_menu_title(L"Main Menu         ");
    main_menu.set_keyboard_delay(16);
    main_menu.set_mouse_delay(24);
    main_menu.set_pos(0.0f,-0.1f,0.001f);
    main_menu.set_size(0.8f,1.7f);
    main_menu.set_menu_font(1);
    main_menu.set_image_background(395);
    main_menu.set_button_zoom(true,0.04f,0.005f);
    main_menu.set_button_images(395,395,395,172,282,405,406,402,403,404);
    main_menu.set_color_normal(128,128,255,255);
    main_menu.set_color_highlighted(192,192,255,255);
    main_menu.set_color_disabled(064,064,128,128);
    main_menu.set_number_of_buttons(9);
    main_menu.set_button_data  ( 1,L"Star Map          ");
    main_menu.set_button_data  ( 2,L"Customize Starship");
    main_menu.set_button_data  ( 3,L"Achievements      ");
    main_menu.set_button_data  ( 4,L"Load Game         ");
    main_menu.set_button_data  ( 5,L"Save Game         ");
    main_menu.set_button_data  ( 6,L"Resume Game       ");
    main_menu.set_button_data  ( 7,L"Options           ");
    main_menu.set_button_active( 8,false);
    main_menu.set_button_data  ( 9,L"Quit Game         ");
    main_menu.set_buttons_auto();
    main_menu.set_close_button_data(396,397);
    main_menu.set_title_data(L"Main Menu         ");//needs to be called last due to size generated by number of buttons etc....
    //------ setup "star map" menu -----------
    star_map_menu.set_menu_title(L"Star Map          ");
    star_map_menu.set_keyboard_delay(16);
    star_map_menu.set_mouse_delay(8);
    star_map_menu.set_pos(0.0f,-0.1f,0.001f);
    star_map_menu.set_size(1.2f,1.0f);
    star_map_menu.set_menu_font(1);
    star_map_menu.set_image_background(395);
    star_map_menu.set_button_zoom(true,0.04f,0.005f);
    star_map_menu.set_button_images(395,395,395,172,282,405,406,402,403,404);
    star_map_menu.set_color_normal(128,128,255,255);
    star_map_menu.set_color_highlighted(192,192,255,255);
    star_map_menu.set_color_disabled(064,064,128,128);
    star_map_menu.set_number_of_buttons(3);
    star_map_menu.set_button_data( 1,L"Level Select      ");
    star_map_menu.set_number_of_choices(1,25);
    star_map_menu.set_number_of_visible_choices(1,5);
    star_map_menu.set_button_choice_position(1,1);
    star_map_menu.set_button_current_choice(1,-100);
    star_map_menu.set_button_choice_data(1, 1,147,L"Taranis           ", true,!game_o.level_locked[ 0]);
    star_map_menu.set_button_choice_data(1, 2,148,L"Teutates          ", true,!game_o.level_locked[ 1]);
    star_map_menu.set_button_choice_data(1, 3,149,L"Esus              ", true,!game_o.level_locked[ 2]);
    star_map_menu.set_button_choice_data(1, 4,150,L"Cantidious        ", true,!game_o.level_locked[ 3]);
    star_map_menu.set_button_choice_data(1, 5,151,L"Vulcan            ", true,!game_o.level_locked[ 4]);
    star_map_menu.set_button_choice_data(1, 6,152,L"Bacchus           ", true,!game_o.level_locked[ 5]);
    star_map_menu.set_button_choice_data(1, 7,153,L"Janus             ", true,!game_o.level_locked[ 6]);
    star_map_menu.set_button_choice_data(1, 8,154,L"Wrathorn          ", true,!game_o.level_locked[ 7]);
    star_map_menu.set_button_choice_data(1, 9,155,L"Tartarus          ", true,!game_o.level_locked[ 8]);
    star_map_menu.set_button_choice_data(1,10,156,L"Erebus            ", true,!game_o.level_locked[ 9]);
    star_map_menu.set_button_choice_data(1,11,157,L"Nyx               ", true,!game_o.level_locked[10]);
    star_map_menu.set_button_choice_data(1,12,158,L"Dediun            ", true,!game_o.level_locked[11]);
    star_map_menu.set_button_choice_data(1,13,159,L"Niflheim          ", true,!game_o.level_locked[12]);
    star_map_menu.set_button_choice_data(1,14,160,L"Muspelhiem        ", true,!game_o.level_locked[13]);
    star_map_menu.set_button_choice_data(1,15,161,L"Hel               ", true,!game_o.level_locked[14]);
    star_map_menu.set_button_choice_data(1,16,162,L"Paganite          ", true,!game_o.level_locked[15]);
    star_map_menu.set_button_choice_data(1,17,163,L"Pixiu             ", true,!game_o.level_locked[16]);
    star_map_menu.set_button_choice_data(1,18,164,L"Xiao              ", true,!game_o.level_locked[17]);
    star_map_menu.set_button_choice_data(1,19,165,L"Fuxi              ", true,!game_o.level_locked[18]);
    star_map_menu.set_button_choice_data(1,20,166,L"Haxorific         ", true,!game_o.level_locked[19]);
    star_map_menu.set_button_choice_data(1,21,167,L"Byakko            ", true,!game_o.level_locked[20]);
    star_map_menu.set_button_choice_data(1,22,168,L"Enenra            ", true,!game_o.level_locked[21]);
    star_map_menu.set_button_choice_data(1,23,169,L"Tengu             ", true,!game_o.level_locked[22]);
    star_map_menu.set_button_choice_data(1,24,170,L"Robonoid          ", true,!game_o.level_locked[23]);
    star_map_menu.set_button_choice_data(1,25,171,L"Oyabun            ", true,!game_o.level_locked[24]);
    star_map_menu.set_button_active( 2,false);
    star_map_menu.set_button_data  ( 3,L"Main Menu        ");
    star_map_menu.set_buttons_auto();
    star_map_menu.set_close_button_data(396,397);
    star_map_menu.set_button_arrow_data_auto(1);
    star_map_menu.set_title_data(L"Star Map          ");//needs to be called last due to size generated by number of buttons etc....
    //------ setup "customize starship" menu -----------
    customize_starship_menu.set_menu_title(L"Customize Starship ");
    customize_starship_menu.set_keyboard_delay(16);
    customize_starship_menu.set_mouse_delay(8);
    customize_starship_menu.set_pos(0.0f,-0.1f,0.001f);
    customize_starship_menu.set_size(0.8f,1.5f);
    customize_starship_menu.set_menu_font(1);
    customize_starship_menu.set_image_background(395);
    customize_starship_menu.set_button_zoom(true,0.04f,0.005f);
    customize_starship_menu.set_button_images(395,395,395,172,282,405,406,402,403,404);
    customize_starship_menu.set_color_normal(128,128,255,255);
    customize_starship_menu.set_color_highlighted(192,192,255,255);
    customize_starship_menu.set_color_disabled(064,064,128,128);
    customize_starship_menu.set_number_of_buttons(7);
    customize_starship_menu.set_button_data  ( 1,L"Front Weapon     ");
    customize_starship_menu.set_number_of_choices(1,7);
    customize_starship_menu.set_number_of_visible_choices(1,5);
    customize_starship_menu.set_button_choice_position(1,1);
    customize_starship_menu.set_button_current_choice(1,game_o.player.front_weapon);
    customize_starship_menu.set_button_choice_data(1, 1,283,L"None              ", true,true);
    customize_starship_menu.set_button_choice_data(1, 2,game_o.projectile[ 0].image,game_o.projectile[ 0].name, true, game_o.projectile[ 0].active);
    customize_starship_menu.set_button_choice_data(1, 3,game_o.projectile[ 1].image,game_o.projectile[ 1].name, true, game_o.projectile[ 1].active);
    customize_starship_menu.set_button_choice_data(1, 4,game_o.projectile[ 2].image,game_o.projectile[ 2].name, true, game_o.projectile[ 2].active);
    customize_starship_menu.set_button_choice_data(1, 5,game_o.projectile[ 3].image,game_o.projectile[ 3].name, true, game_o.projectile[ 3].active);
    customize_starship_menu.set_button_choice_data(1, 6,game_o.projectile[ 4].image,game_o.projectile[ 4].name, true, game_o.projectile[ 4].active);
    customize_starship_menu.set_button_choice_data(1, 7,game_o.projectile[ 5].image,game_o.projectile[ 5].name, true, game_o.projectile[ 5].active);
    customize_starship_menu.set_button_data  ( 2,L"Side Weapon      ");
    customize_starship_menu.set_number_of_choices(2,7);
    customize_starship_menu.set_number_of_visible_choices(2,5);
    customize_starship_menu.set_button_choice_position(2,1);
    customize_starship_menu.set_button_current_choice(2,game_o.player.side_weapon);
    customize_starship_menu.set_button_choice_data(2, 1,283,L"None              ", true,true);
    customize_starship_menu.set_button_choice_data(2, 2,game_o.projectile[ 0].image,game_o.projectile[ 0].name, true, game_o.projectile[ 0].active);
    customize_starship_menu.set_button_choice_data(2, 3,game_o.projectile[ 1].image,game_o.projectile[ 1].name, true, game_o.projectile[ 1].active);
    customize_starship_menu.set_button_choice_data(2, 4,game_o.projectile[ 2].image,game_o.projectile[ 2].name, true, game_o.projectile[ 2].active);
    customize_starship_menu.set_button_choice_data(2, 5,game_o.projectile[ 3].image,game_o.projectile[ 3].name, true, game_o.projectile[ 3].active);
    customize_starship_menu.set_button_choice_data(2, 6,game_o.projectile[ 4].image,game_o.projectile[ 4].name, true, game_o.projectile[ 4].active);
    customize_starship_menu.set_button_choice_data(2, 7,game_o.projectile[ 5].image,game_o.projectile[ 5].name, true, game_o.projectile[ 5].active);
    customize_starship_menu.set_button_data  ( 3,L"Shield           ");
    customize_starship_menu.set_number_of_choices(3,6);
    customize_starship_menu.set_number_of_visible_choices(3,5);
    customize_starship_menu.set_button_choice_position(3,1);
    customize_starship_menu.set_button_current_choice(3,game_o.player.front_shield);
    customize_starship_menu.set_button_choice_data(3, 1,283,L"None              ", true,true);
    customize_starship_menu.set_button_choice_data(3, 2,game_o.shield[ 0].image,game_o.shield[ 0].name, true, game_o.shield[ 0].active);
    customize_starship_menu.set_button_choice_data(3, 3,game_o.shield[ 1].image,game_o.shield[ 1].name, true, game_o.shield[ 1].active);
    customize_starship_menu.set_button_choice_data(3, 4,game_o.shield[ 2].image,game_o.shield[ 2].name, true, game_o.shield[ 2].active);
    customize_starship_menu.set_button_choice_data(3, 5,game_o.shield[ 3].image,game_o.shield[ 3].name, true, game_o.shield[ 3].active);
    customize_starship_menu.set_button_choice_data(3, 6,game_o.shield[ 4].image,game_o.shield[ 4].name, true, game_o.shield[ 4].active);
    customize_starship_menu.set_button_data  ( 4,L"Thrusters        ");
    customize_starship_menu.set_number_of_choices(4,4);
    customize_starship_menu.set_number_of_visible_choices(4,4);
    customize_starship_menu.set_button_choice_position(4,1);
    customize_starship_menu.set_button_current_choice(4,game_o.player.thrusters);
    customize_starship_menu.set_button_choice_data(4, 1,283,L"None              ", true,true);
    customize_starship_menu.set_button_choice_data(4, 2,game_o.thruster[ 0].image,game_o.thruster[ 0].name, true, game_o.thruster[ 0].active);
    customize_starship_menu.set_button_choice_data(4, 3,game_o.thruster[ 1].image,game_o.thruster[ 1].name, true, game_o.thruster[ 1].active);
    customize_starship_menu.set_button_choice_data(4, 4,game_o.thruster[ 2].image,game_o.thruster[ 2].name, true, game_o.thruster[ 2].active);
    customize_starship_menu.set_button_data   ( 5,L"Support Ships    ");
    customize_starship_menu.set_button_enabled( 5,false);
    customize_starship_menu.set_button_active ( 6,false);
    customize_starship_menu.set_button_data   ( 7,L"Main Menu        ");
    customize_starship_menu.set_buttons_auto();
    customize_starship_menu.set_close_button_data(396,397);
    star_map_menu.set_button_arrow_data_auto(1);
    customize_starship_menu.set_title_data(L"Customize Starship ");//needs to be called last due to size generated by number of buttons etc....
    //------ setup "achievements" menu -----------
    achievements_menu.set_menu_title(L"Achievements      ");
    achievements_menu.set_keyboard_delay(16);
    achievements_menu.set_mouse_delay(24);
    achievements_menu.set_pos(0.0f,-0.1f,0.001f);
    achievements_menu.set_size(1.2f,1.0f);
    achievements_menu.set_menu_font(1);
    achievements_menu.set_image_background(395);
    achievements_menu.set_button_zoom(true,0.04f,0.005f);
    achievements_menu.set_button_images(395,395,395,172,282,405,406,402,403,404);
    achievements_menu.set_achieve_button_images(307, 304);
    achievements_menu.set_color_normal(128,128,255,255);
    achievements_menu.set_color_highlighted(192,192,255,255);
    achievements_menu.set_color_disabled(064,064,128,128);
    achievements_menu.set_number_of_buttons(4);
    achievements_menu.set_button_data     ( 1, L"Score             ");
    options_menu.set_button_type          ( 1, ACHIEVE);
    achievements_menu.set_achieve_data    ( 1, 7);
    achievements_menu.set_achieve_position( 1, 7);
    achievements_menu.set_button_data     ( 2, L"Kills             ");
    options_menu.set_button_type          ( 2, ACHIEVE);
    achievements_menu.set_achieve_data    ( 2, 7);
    achievements_menu.set_achieve_position( 2, 2);
    achievements_menu.set_button_active   ( 3, false);
    achievements_menu.set_button_data     ( 4, L"Main Menu         ");
    achievements_menu.set_buttons_auto();
    achievements_menu.set_close_button_data(396,397);
    achievements_menu.set_title_data(L"Achievements      ");//needs to be called last due to size generated by number of buttons etc....
    //------ setup "save game" menu -----------
    save_menu.set_menu_title(L"Save Menu         ");
    save_menu.set_keyboard_delay(16);
    save_menu.set_mouse_delay(24);
    save_menu.set_pos(0.0f,-0.1f,0.001f);
    save_menu.set_size(0.8f,1.7f);
    save_menu.set_menu_font(1);
    save_menu.set_image_background(395);
    save_menu.set_button_zoom(true,0.04f,0.005f);
    save_menu.set_button_images(395,395,395,172,282,405,406,402,403,404);
    save_menu.set_color_normal(128,128,255,255);
    save_menu.set_color_highlighted(192,192,255,255);
    save_menu.set_color_disabled(064,064,128,128);
    save_menu.set_number_of_buttons(9);
    save_menu.set_button_data  ( 1,L"Save Slot 1       ");
    save_menu.set_button_data  ( 2,L"Save Slot 2       ");
    save_menu.set_button_data  ( 3,L"Save Slot 3       ");
    save_menu.set_button_data  ( 4,L"Save Slot 4       ");
    save_menu.set_button_data  ( 5,L"Save Slot 5       ");
    save_menu.set_button_data  ( 6,L"Save Slot 6       ");
    save_menu.set_button_data  ( 7,L"Save Slot 7       ");
    save_menu.set_button_active( 8,false);
    save_menu.set_button_data  ( 9,L"Main Menu         ");
    save_menu.set_buttons_auto();
    save_menu.set_close_button_data(396,397);
    save_menu.set_title_data(L"Save Menu         ");//needs to be called last due to size generated by number of buttons etc....
    //------ setup "load game" menu -----------
    load_menu.set_menu_title(L"Load Menu         ");
    load_menu.set_keyboard_delay(16);
    load_menu.set_mouse_delay(24);
    load_menu.set_pos(0.0f,-0.1f,0.001f);
    load_menu.set_size(0.8f,1.7f);
    load_menu.set_menu_font(1);
    load_menu.set_image_background(395);
    load_menu.set_button_zoom(true,0.04f,0.005f);
    load_menu.set_button_images(395,395,395,172,282,405,406,402,403,404);
    load_menu.set_color_normal(128,128,255,255);
    load_menu.set_color_highlighted(192,192,255,255);
    load_menu.set_color_disabled(064,064,128,128);
    load_menu.set_number_of_buttons(9);
    load_menu.set_button_data  ( 1,L"Save Slot 1       ");
    load_menu.set_button_data  ( 2,L"Save Slot 2       ");
    load_menu.set_button_data  ( 3,L"Save Slot 3       ");
    load_menu.set_button_data  ( 4,L"Save Slot 4       ");
    load_menu.set_button_data  ( 5,L"Save Slot 5       ");
    load_menu.set_button_data  ( 6,L"Save Slot 6       ");
    load_menu.set_button_data  ( 7,L"Save Slot 7       ");
    load_menu.set_button_active( 8,false);
    load_menu.set_button_data  ( 9,L"Main Menu         ");
    load_menu.set_buttons_auto();
    load_menu.set_close_button_data(396,397);
    load_menu.set_title_data(L"Load Menu         ");//needs to be called last due to size generated by number of buttons etc....
    game.save_01.Assign_File("save/slot_01.sav");
    if (game.save_01.File_Exists()) load_menu.button[1].set_enabled(true);
    else load_menu.button[1].set_enabled(false);
    game.save_02.Assign_File("save/slot_02.sav");
    if (game.save_02.File_Exists()) load_menu.button[2].set_enabled(true);
    else load_menu.button[2].set_enabled(false);
    game.save_03.Assign_File("save/slot_03.sav");
    if (game.save_03.File_Exists()) load_menu.button[3].set_enabled(true);
    else load_menu.button[3].set_enabled(false);
    game.save_04.Assign_File("save/slot_04.sav");
    if (game.save_04.File_Exists()) load_menu.button[4].set_enabled(true);
    else load_menu.button[4].set_enabled(false);
    game.save_05.Assign_File("save/slot_05.sav");
    if (game.save_05.File_Exists()) load_menu.button[5].set_enabled(true);
    else load_menu.button[5].set_enabled(false);
    game.save_06.Assign_File("save/slot_06.sav");
    if (game.save_06.File_Exists()) load_menu.button[6].set_enabled(true);
    else load_menu.button[6].set_enabled(false);
    game.save_07.Assign_File("save/slot_07.sav");
    if (game.save_07.File_Exists()) load_menu.button[7].set_enabled(true);
    else load_menu.button[7].set_enabled(false);
    //------ setup "options" menu -----------
    options_menu.set_menu_title(L"Options           ");
    options_menu.set_keyboard_delay(16);
    options_menu.set_mouse_delay(24);
    options_menu.set_pos(0.0f,-0.1f,0.001f);
    options_menu.set_size(0.8f,1.2f);
    options_menu.set_menu_font(1);
    options_menu.set_image_background(395);
    options_menu.set_button_zoom(true,0.04f,0.005f);
    options_menu.set_button_images(395,395,395,172,282,405,406,402,403,404);
    options_menu.set_toggle_button_images(399,398,397,396);
    options_menu.set_color_normal(128,128,255,255);
    options_menu.set_color_highlighted(192,192,255,255);
    options_menu.set_color_disabled(064,064,128,128);
    options_menu.set_number_of_buttons(6);
    options_menu.set_button_data  ( 1,L"Sound Volume      ");
    options_menu.set_button_type  ( 1,SLIDER);
    options_menu.set_button_slider_position(1,game.config.Audio_Sound_Volume);
    options_menu.set_button_slider_position_max(1,128);
    options_menu.set_button_data  ( 2,L"Music Volume      ");
    options_menu.set_button_type  ( 2,SLIDER);
    options_menu.set_button_slider_position(2,game.config.Audio_Music_Volume);
    options_menu.set_button_slider_position_max(2,128);
    options_menu.set_button_data  ( 3,L"Screen Resolution ");
    options_menu.set_number_of_choices(3,8);
    options_menu.set_number_of_visible_choices(3,5);
    options_menu.set_button_choice_position(3,1);
    options_menu.set_button_current_choice(3,game.config.Display_resolution);
    options_menu.set_button_choice_data(3, 1,407,L"640 X 480         ", true, true);
    options_menu.set_button_choice_data(3, 2,407,L"800 X 600         ", true, true);
    options_menu.set_button_choice_data(3, 3,407,L"1024 X 768        ", true, true);
    options_menu.set_button_choice_data(3, 4,407,L"1280 X 1024       ", true, true);
    options_menu.set_button_choice_data(3, 5,407,L"1366 X 768        ", true, true);
    options_menu.set_button_choice_data(3, 6,407,L"1440 X 900        ", true, true);
    options_menu.set_button_choice_data(3, 7,407,L"1680 X 1050       ", true, true);
    options_menu.set_button_choice_data(3, 8,407,L"1920 X 1080       ", true, true);
    options_menu.set_button_data  ( 4,L"Full Screen       ");
    options_menu.set_button_type  ( 4,TOGGLE);
    options_menu.set_button_active( 5,false);
    options_menu.set_button_data  ( 6,L"Main Menu         ");
    options_menu.set_buttons_auto();
    options_menu.set_close_button_data(396,397);
    options_menu.set_title_data(L"Options            ");//needs to be called last due to size generated by number of buttons etc....
    //------ setup "game over" menu -----------
    game_over_menu.set_menu_title(L"Game Over         ");
    game_over_menu.set_keyboard_delay(16);
    game_over_menu.set_mouse_delay(24);
    game_over_menu.set_pos(0.0f,-0.85f,0.001f);
    game_over_menu.set_size(0.8f,0.2f);
    game_over_menu.set_menu_font(1);
    game_over_menu.set_image_background(395);
    game_over_menu.set_button_zoom(true,0.04f,0.005f);
    game_over_menu.set_button_images(395,395,395,172,282,405,406,402,403,404);
    game_over_menu.set_color_normal(128,128,255,255);
    game_over_menu.set_color_highlighted(192,192,255,255);
    game_over_menu.set_color_disabled(064,064,128,128);
    game_over_menu.set_number_of_buttons(1);
    game_over_menu.set_button_data  ( 1,L"Main Menu         ");
    game_over_menu.set_buttons_auto();
    game_over_menu.set_close_button_data(396,397);
    game_over_menu.set_title_data(L"Game Over         ");//needs to be called last due to size generated by number of buttons etc....
    //------ setup "next level" menu -----------
    next_level_menu.set_menu_title(L"Level Completed   ");
    next_level_menu.set_keyboard_delay(16);
    next_level_menu.set_mouse_delay(24);
    next_level_menu.set_pos(0.0f,-0.85f,0.001f);
    next_level_menu.set_size(0.8f,0.2f);
    next_level_menu.set_menu_font(1);
    next_level_menu.set_image_background(395);
    next_level_menu.set_button_zoom(true,0.04f,0.005f);
    next_level_menu.set_button_images(395,395,395,172,282,405,406,402,403,404);
    next_level_menu.set_color_normal(128,128,255,255);
    next_level_menu.set_color_highlighted(192,192,255,255);
    next_level_menu.set_color_disabled(064,064,128,128);
    next_level_menu.set_number_of_buttons(1);
    next_level_menu.set_button_data  ( 1,L"Next Level        ");
    next_level_menu.set_buttons_auto();
    next_level_menu.set_close_button_data(396,397);
    next_level_menu.set_title_data(L"Level Completed   ");//needs to be called last due to size generated by number of buttons etc....
    //------ setup "outro" menu -----------
    outro_menu.set_menu_title(L"Game Completed    ");
    outro_menu.set_keyboard_delay(16);
    outro_menu.set_mouse_delay(24);
    outro_menu.set_pos(0.0f,-0.85f,0.001f);
    outro_menu.set_size(0.8f,0.2f);
    outro_menu.set_menu_font(1);
    outro_menu.set_image_background(395);
    outro_menu.set_button_zoom(true,0.04f,0.005f);
    outro_menu.set_button_images(395,395,395,172,282,405,406,402,403,404);
    outro_menu.set_color_normal(128,128,255,255);
    outro_menu.set_color_highlighted(192,192,255,255);
    outro_menu.set_color_disabled(064,064,128,128);
    outro_menu.set_number_of_buttons(1);
    outro_menu.set_button_data  ( 1,L"Main menu         ");
    outro_menu.set_buttons_auto();
    outro_menu.set_close_button_data(396,397);
    outro_menu.set_title_data(L"Game Completed    ");//needs to be called last due to size generated by number of buttons etc....
    //------ setup "pause" menu -----------
    pause_menu.set_menu_title(L"Game Paused       ");
    pause_menu.set_keyboard_delay(16);
    pause_menu.set_mouse_delay(24);
    pause_menu.set_pos(0.0f,-0.85f,0.001f);
    pause_menu.set_size(0.8f,0.2f);
    pause_menu.set_menu_font(1);
    pause_menu.set_image_background(395);
    pause_menu.set_button_zoom(true,0.04f,0.005f);
    pause_menu.set_button_images(395,395,395,172,282,405,406,402,403,404);
    pause_menu.set_color_normal(128,128,255,255);
    pause_menu.set_color_highlighted(192,192,255,255);
    pause_menu.set_color_disabled(064,064,128,128);
    pause_menu.set_number_of_buttons(1);
    pause_menu.set_button_data  ( 1,L"Resume Game       ");
    pause_menu.set_buttons_auto();
    pause_menu.set_close_button_data(396,397);
    pause_menu.set_title_data(L"Game Paused       ");//needs to be called last due to size generated by number of buttons etc....
    return(0);
};


//---------------------------------------------------------------------------------------
int process_menu(void)
{
    int  activated_button = -1;
    bool set_resolution   = false;
    // ------------------- main menu ------------
    activated_button = -1;
    if (game.menu_level == 1)
    {
        if (game.game_resume) main_menu.button[5].set_enabled(true);
        else main_menu.button[5].set_enabled(false);
        if (game.game_resume) main_menu.button[6].set_enabled(true);
        else main_menu.button[6].set_enabled(false);
        activated_button = main_menu.process();
        switch (activated_button)
        {
            case 1://Star Map
                sound.menu_select.play();
                game.menu_level = 2;
                game.log.File_Write("Entering 'Star Map' menu.");
            break;
            case 2://Customize Starship
                sound.menu_select.play();
                game.menu_level = 3;
                game.log.File_Write("Entering 'Customize Starship' menu.");
            break;
            case 3://Achievements
                sound.menu_select.play();
                game.menu_level = 4;
                game.log.File_Write("Entering 'Achievements' menu.");
            break;
            case 4://Load Game
                sound.menu_select.play();
                game.menu_level = 5;
                game.log.File_Write("Entering 'Load Game' menu.");
            break;
            case 5://Save Game
                if (game.game_resume)
                {
                    sound.menu_select.play();
                    game.menu_level = 6;
                    game.log.File_Write("Entering 'Save Game' menu.");
                }
            break;
            case 6://Resume Game
                if (game.game_resume)
                {
                    sound.menu_select.play();
                    game.music_next_track = true;
                    game.game_active      = true;
                    game.menu_active      = false;
                    game.log.File_Write("Resuming Game");
                }
            break;
            case 7://Options
                sound.menu_select.play();
                game.menu_level = 7;
                game.log.File_Write("Entering 'Options' menu.");
            break;
            case 8://NA
            break;
            case 9://Quit Game
                sound.menu_select.play();
                game.status_quit_active = true;
                game.log.File_Write("User terminating game - 'Quit Game' selected!");
            break;
            case 65533://only move no select.
                sound.menu_move.play();
            break;
            case 65534:// escape pressed on keyboard.
                sound.menu_select.play();
                game.status_quit_active = true;
                game.io.escape               = false;
                game.log.File_Write("User terminating game - keyboard escape pressed!");
            break;
            case 65535:// close button clicked.
                sound.menu_select.play();
                game.status_quit_active = true;
                game.log.File_Write("User terminating game - clicked escape button!");
            break;
            default:
            break;
        };
    };
    // ------------------- Star_Map Menu ------------
    activated_button = -1;
    if (game.menu_level == 2)
    {
        star_map_menu.set_button_choice_enabled(1, 1,!game_o.level_locked[ 0]);
        star_map_menu.set_button_choice_enabled(1, 2,!game_o.level_locked[ 1]);
        star_map_menu.set_button_choice_enabled(1, 3,!game_o.level_locked[ 2]);
        star_map_menu.set_button_choice_enabled(1, 4,!game_o.level_locked[ 3]);
        star_map_menu.set_button_choice_enabled(1, 5,!game_o.level_locked[ 4]);
        star_map_menu.set_button_choice_enabled(1, 6,!game_o.level_locked[ 5]);
        star_map_menu.set_button_choice_enabled(1, 7,!game_o.level_locked[ 6]);
        star_map_menu.set_button_choice_enabled(1, 8,!game_o.level_locked[ 7]);
        star_map_menu.set_button_choice_enabled(1, 9,!game_o.level_locked[ 8]);
        star_map_menu.set_button_choice_enabled(1,10,!game_o.level_locked[ 9]);
        star_map_menu.set_button_choice_enabled(1,11,!game_o.level_locked[10]);
        star_map_menu.set_button_choice_enabled(1,12,!game_o.level_locked[11]);
        star_map_menu.set_button_choice_enabled(1,13,!game_o.level_locked[12]);
        star_map_menu.set_button_choice_enabled(1,14,!game_o.level_locked[13]);
        star_map_menu.set_button_choice_enabled(1,15,!game_o.level_locked[14]);
        star_map_menu.set_button_choice_enabled(1,16,!game_o.level_locked[15]);
        star_map_menu.set_button_choice_enabled(1,17,!game_o.level_locked[16]);
        star_map_menu.set_button_choice_enabled(1,18,!game_o.level_locked[17]);
        star_map_menu.set_button_choice_enabled(1,19,!game_o.level_locked[18]);
        star_map_menu.set_button_choice_enabled(1,20,!game_o.level_locked[19]);
        star_map_menu.set_button_choice_enabled(1,21,!game_o.level_locked[20]);
        star_map_menu.set_button_choice_enabled(1,22,!game_o.level_locked[21]);
        star_map_menu.set_button_choice_enabled(1,23,!game_o.level_locked[22]);
        star_map_menu.set_button_choice_enabled(1,24,!game_o.level_locked[23]);
        star_map_menu.set_button_choice_enabled(1,25,!game_o.level_locked[24]);
        activated_button = star_map_menu.process();
        switch (activated_button)
        {
            case 101://Choice 1 selected
                if (!game_o.level_locked[star_map_menu.get_button_choice_position(1) + 0 -1])
                {
                    sound.menu_select.play();
                    game.music_next_track = true;
                    game_o.level = star_map_menu.get_button_choice_position(1) + 0 -1;
                    init_game_level(game_o.level);
                    game.game_active = true;
                    game.menu_active = false;
                    game.log.File_Write("Starting level ",game_o.level);
                }
            break;
            case 102://Choice 2 selected
                if (!game_o.level_locked[star_map_menu.get_button_choice_position(1) + 1 -1])
                {
                    sound.menu_select.play();
                    game.music_next_track = true;
                    game_o.level = star_map_menu.get_button_choice_position(1) + 1 -1;
                    init_game_level(game_o.level);
                    game.game_active = true;
                    game.menu_active = false;
                    game.log.File_Write("Starting level ",game_o.level);
                }
            break;
            case 103://Choice 3 selected
                if (!game_o.level_locked[star_map_menu.get_button_choice_position(1) + 2 -1])
                {
                    sound.menu_select.play();
                    game.music_next_track = true;
                    game_o.level = star_map_menu.get_button_choice_position(1) + 2 -1;
                    init_game_level(game_o.level);
                    game.game_active = true;
                    game.menu_active = false;
                    game.log.File_Write("Starting level ",game_o.level);
                }
            break;
            case 104://Choice 4 selected
                if (!game_o.level_locked[star_map_menu.get_button_choice_position(1) + 3 -1])
                {
                    sound.menu_select.play();
                    game.music_next_track = true;
                    game_o.level = star_map_menu.get_button_choice_position(1) + 3 -1;
                    init_game_level(game_o.level);
                    game.game_active = true;
                    game.menu_active = false;
                    game.log.File_Write("Starting level ",game_o.level);
                }
            break;
            case 105://Choice 5 selected
                if (!game_o.level_locked[star_map_menu.get_button_choice_position(1) + 4 -1])
                {
                    sound.menu_select.play();
                    game.music_next_track = true;
                    game_o.level = star_map_menu.get_button_choice_position(1) + 4 -1;
                    init_game_level(game_o.level);
                    game.game_active = true;
                    game.menu_active = false;
                    game.log.File_Write("Starting level ",game_o.level);
                }
            break;
            case 4001://left arrow on button 1
                star_map_menu.set_button_choice_position(1,star_map_menu.get_button_choice_position(1)-1);
                if (star_map_menu.get_button_choice_position(1) < 1) star_map_menu.set_button_choice_position(1,1);
            break;
            case 5001://right arrow on button 1
                star_map_menu.set_button_choice_position(1,star_map_menu.get_button_choice_position(1)+1);
                if (star_map_menu.get_button_choice_position(1) >= star_map_menu.get_number_of_choices(1)-(star_map_menu.get_number_of_visible_choices(1)-1)) star_map_menu.set_button_choice_position(1,star_map_menu.get_number_of_choices(1)-(star_map_menu.get_number_of_visible_choices(1)-1));
            break;
            case 3://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Star_Map menu. - button selected.");
            break;
            case 65533://menu choice changed
                sound.menu_move.play();
            break;
            case 65534://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.io.escape               = false;
                game.log.File_Write("Entering main menu, from Star_Map menu. - escape preses.");
            break;
            case 65535://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Star_Map menu. - button clicked.");
            break;
            default:
            break;
        };
    };
    // ------------------- Customize_Starship Menu ------------
    activated_button = -1;
    if (game.menu_level == 3)
    {
        customize_starship_menu.set_button_choice_data(1, 2,game_o.projectile[ 0].image, true, game_o.projectile[ 0].active);
        customize_starship_menu.set_button_choice_data(1, 3,game_o.projectile[ 1].image, true, game_o.projectile[ 1].active);
        customize_starship_menu.set_button_choice_data(1, 4,game_o.projectile[ 2].image, true, game_o.projectile[ 2].active);
        customize_starship_menu.set_button_choice_data(1, 5,game_o.projectile[ 3].image, true, game_o.projectile[ 3].active);
        customize_starship_menu.set_button_choice_data(1, 6,game_o.projectile[ 4].image, true, game_o.projectile[ 4].active);
        customize_starship_menu.set_button_choice_data(1, 7,game_o.projectile[ 5].image, true, game_o.projectile[ 5].active);
        customize_starship_menu.set_button_choice_data(2, 2,game_o.projectile[ 0].image, true, game_o.projectile[ 0].active);
        customize_starship_menu.set_button_choice_data(2, 3,game_o.projectile[ 1].image, true, game_o.projectile[ 1].active);
        customize_starship_menu.set_button_choice_data(2, 4,game_o.projectile[ 2].image, true, game_o.projectile[ 2].active);
        customize_starship_menu.set_button_choice_data(2, 5,game_o.projectile[ 3].image, true, game_o.projectile[ 3].active);
        customize_starship_menu.set_button_choice_data(2, 6,game_o.projectile[ 4].image, true, game_o.projectile[ 4].active);
        customize_starship_menu.set_button_choice_data(2, 7,game_o.projectile[ 5].image, true, game_o.projectile[ 5].active);
        customize_starship_menu.set_button_choice_data(3, 2,game_o.shield[ 0].image, true, game_o.shield[ 0].active);
        customize_starship_menu.set_button_choice_data(3, 3,game_o.shield[ 1].image, true, game_o.shield[ 1].active);
        customize_starship_menu.set_button_choice_data(3, 4,game_o.shield[ 2].image, true, game_o.shield[ 2].active);
        customize_starship_menu.set_button_choice_data(3, 5,game_o.shield[ 3].image, true, game_o.shield[ 3].active);
        customize_starship_menu.set_button_choice_data(3, 6,game_o.shield[ 4].image, true, game_o.shield[ 4].active);
        customize_starship_menu.set_button_choice_data(4, 2,game_o.thruster[ 0].image, true, game_o.thruster[ 0].active);
        customize_starship_menu.set_button_choice_data(4, 3,game_o.thruster[ 1].image, true, game_o.thruster[ 1].active);
        customize_starship_menu.set_button_choice_data(4, 4,game_o.thruster[ 2].image, true, game_o.thruster[ 2].active);
        customize_starship_menu.set_button_current_choice(1,game_o.player.front_weapon);
        customize_starship_menu.set_button_current_choice(2,game_o.player.side_weapon);
        customize_starship_menu.set_button_current_choice(3,game_o.player.front_shield);
        customize_starship_menu.set_button_current_choice(4,game_o.player.thrusters);
        activated_button = customize_starship_menu.process();
        switch (activated_button)
        {
            case 101://Choice 1 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(1) + 0 -2].active)
                {
                    game_o.player.front_weapon = customize_starship_menu.get_button_choice_position(1) + 0 -2;
                    sound.menu_select.play();
                }
            break;
            case 102://Choice 2 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(1) + 1 -2].active)
                {
                    game_o.player.front_weapon = customize_starship_menu.get_button_choice_position(1) + 1 -2;
                    sound.menu_select.play();
                }
            break;
            case 103://Choice 3 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(1) + 2 -2].active)
                {
                    game_o.player.front_weapon = customize_starship_menu.get_button_choice_position(1) + 2 -2;
                    sound.menu_select.play();
                }
            break;
            case 104://Choice 4 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(1) + 3 -2].active)
                {
                    game_o.player.front_weapon = customize_starship_menu.get_button_choice_position(1) + 3 -2;
                    sound.menu_select.play();
                }
            break;
            case 105://Choice 5 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(1) + 4 -2].active)
                {
                    game_o.player.front_weapon = customize_starship_menu.get_button_choice_position(1) + 4 -2;
                    sound.menu_select.play();
                }
            break;
            case 201://Choice 1 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(2) + 0 -2].active)
                {
                    game_o.player.side_weapon = customize_starship_menu.get_button_choice_position(2) + 0 -2;
                    sound.menu_select.play();
                }
            break;
            case 202://Choice 2 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(2) + 1 -2].active)
                {
                    game_o.player.side_weapon = customize_starship_menu.get_button_choice_position(2) + 1 -2;
                    sound.menu_select.play();
                }
            break;
            case 203://Choice 3 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(2) + 2 -2].active)
                {
                    game_o.player.side_weapon = customize_starship_menu.get_button_choice_position(2) + 2 -2;
                    sound.menu_select.play();
                }
            break;
            case 204://Choice 4 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(2) + 3 -2].active)
                {
                    game_o.player.side_weapon = customize_starship_menu.get_button_choice_position(2) + 3 -2;
                    sound.menu_select.play();
                }
            break;
            case 205://Choice 5 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(2) + 4 -2].active)
                {
                    game_o.player.side_weapon = customize_starship_menu.get_button_choice_position(2) + 4 -2;
                    sound.menu_select.play();
                }
            break;
            case 301://Choice 1 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(3) + 0 -1].active)
                {
                    game_o.player.front_shield = customize_starship_menu.get_button_choice_position(3) + 0 -2;
                    sound.menu_select.play();
                }
            break;
            case 302://Choice 2 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(3) + 1 -1].active)
                {
                    game_o.player.front_shield = customize_starship_menu.get_button_choice_position(3) + 1 -2;
                    sound.menu_select.play();
                }
            break;
            case 303://Choice 3 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(3) + 2 -1].active)
                {
                    game_o.player.front_shield = customize_starship_menu.get_button_choice_position(3) + 2 -2;
                    sound.menu_select.play();
                }
            break;
            case 304://Choice 4 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(3) + 3 -1].active)
                {
                    game_o.player.front_shield = customize_starship_menu.get_button_choice_position(3) + 3 -2;
                    sound.menu_select.play();
                }
            break;
            case 305://Choice 5 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(3) + 4 -1].active)
                {
                    game_o.player.front_shield = customize_starship_menu.get_button_choice_position(3) + 4 -2;
                    sound.menu_select.play();
                }
            break;
            case 401://Choice 1 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(4) + 0 -1].active)
                {
                    game_o.player.thrusters = customize_starship_menu.get_button_choice_position(4) + 0 -2;
                    sound.menu_select.play();
                }
            break;
            case 402://Choice 2 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(4) + 1 -1].active)
                {
                    game_o.player.thrusters = customize_starship_menu.get_button_choice_position(4) + 1 -2;
                    sound.menu_select.play();
                }
            break;
            case 403://Choice 3 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(4) + 2 -1].active)
                {
                    game_o.player.thrusters = customize_starship_menu.get_button_choice_position(4) + 2 -2;
                    sound.menu_select.play();
                }
            break;
            case 404://Choice 4 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(4) + 3 -1].active)
                {
                    game_o.player.thrusters = customize_starship_menu.get_button_choice_position(4) + 3 -2;
                    sound.menu_select.play();
                }
            break;
            case 405://Choice 5 selected
                if ( game_o.projectile[customize_starship_menu.get_button_choice_position(4) + 4 -1].active)
                {
                    game_o.player.thrusters = customize_starship_menu.get_button_choice_position(4) + 4 -2;
                    sound.menu_select.play();
                }
            break;
            case 7://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Customize_Starship menu. - button selected.");
            break;
            case 4001://left arrow on button 1
                customize_starship_menu.set_button_choice_position(1,customize_starship_menu.get_button_choice_position(1)-1);
                if (customize_starship_menu.get_button_choice_position(1) < 1) customize_starship_menu.set_button_choice_position(1,1);
            break;
            case 5001://right arrow on button 1
                customize_starship_menu.set_button_choice_position(1,customize_starship_menu.get_button_choice_position(1)+1);
                if (customize_starship_menu.get_button_choice_position(1) >= customize_starship_menu.get_number_of_choices(1)-(customize_starship_menu.get_number_of_visible_choices(1)-1)) customize_starship_menu.set_button_choice_position(1,customize_starship_menu.get_number_of_choices(1)-(customize_starship_menu.get_number_of_visible_choices(1)-1));
            break;
            case 4002://left arrow on button 2
                customize_starship_menu.set_button_choice_position(2,customize_starship_menu.get_button_choice_position(2)-1);
                if (customize_starship_menu.get_button_choice_position(2) < 1) customize_starship_menu.set_button_choice_position(2,1);
            break;
            case 5002://right arrow on button 2
                customize_starship_menu.set_button_choice_position(2,customize_starship_menu.get_button_choice_position(2)+1);
                if (customize_starship_menu.get_button_choice_position(2) >= customize_starship_menu.get_number_of_choices(2)-(customize_starship_menu.get_number_of_visible_choices(2)-1)) customize_starship_menu.set_button_choice_position(2,customize_starship_menu.get_number_of_choices(2)-(customize_starship_menu.get_number_of_visible_choices(2)-1));
            break;
            case 4003://left arrow on button 3
                customize_starship_menu.set_button_choice_position(3,customize_starship_menu.get_button_choice_position(3)-1);
                if (customize_starship_menu.get_button_choice_position(3) < 1) customize_starship_menu.set_button_choice_position(3,1);
            break;
            case 5003://right arrow on button 3
                customize_starship_menu.set_button_choice_position(3,customize_starship_menu.get_button_choice_position(3)+1);
                if (customize_starship_menu.get_button_choice_position(3) >= customize_starship_menu.get_number_of_choices(3)-(customize_starship_menu.get_number_of_visible_choices(3)-1)) customize_starship_menu.set_button_choice_position(3,customize_starship_menu.get_number_of_choices(3)-(customize_starship_menu.get_number_of_visible_choices(3)-1));
            break;
            case 4004://left arrow on button 4
                customize_starship_menu.set_button_choice_position(4,customize_starship_menu.get_button_choice_position(4)-1);
                if (customize_starship_menu.get_button_choice_position(4) < 1) customize_starship_menu.set_button_choice_position(4,1);
            break;
            case 5004://right arrow on button 4
                customize_starship_menu.set_button_choice_position(4,customize_starship_menu.get_button_choice_position(4)+1);
                if (customize_starship_menu.get_button_choice_position(4) >= customize_starship_menu.get_number_of_choices(4)-(customize_starship_menu.get_number_of_visible_choices(4)-1)) customize_starship_menu.set_button_choice_position(4,customize_starship_menu.get_number_of_choices(4)-(customize_starship_menu.get_number_of_visible_choices(4)-1));
            break;
            case 65533://menu choice changed
                sound.menu_move.play();
            break;
            case 65534://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.io.escape               = false;
                game.log.File_Write("Entering main menu, from Customize_Starship menu. - escape preses.");
            break;
            case 65535://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Customize_Starship menu. - button clicked.");
            break;
            default:
            break;
        };
    };
    // ------------------- Achievements Menu ------------
    activated_button = -1;
    if (game.menu_level == 4)
    {
        achievements_menu.set_achieve_position( 1, game_o.achivement.score);
        achievements_menu.set_achieve_position( 2, game_o.achivement.kills);
        activated_button = achievements_menu.process();
        switch (activated_button)
        {
            case 1://

            break;
            case 4://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Achievements menu. - button selected.");
            break;
            case 65533://menu choice changed
                sound.menu_move.play();
            break;
            case 65534://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.io.escape               = false;
                game.log.File_Write("Entering main menu, from Achievements menu. - escape preses.");
            break;
            case 65535://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Achievements menu. - button clicked.");
            break;
            default:
            break;
        };
    };
    // ------------------- Load menu ------------
    activated_button = -1;
    if (game.menu_level == 5)
    {
        activated_button = load_menu.process();
        switch (activated_button)
        {
            case 1://Save Slot 1 selected.
                if (load_menu.get_button_enabled(1))
                {
                    game.save_01.Assign_File("save/slot_01.sav");
                    if (game.save_01.Load())
                    {
                        game.log.File_Write("Loading from slot 1");
                        game_o.loaded.spawn();
                        game.game_active = true;
                        game.menu_active = false;
                        game.log.File_Write("Resuming game");
                        game.music_next_track = true;
                        sound.menu_select.play();
                    }
                }
            break;
            case 2://Save Slot 2 selected.
                if (load_menu.get_button_enabled(2))
                {
                    game.save_02.Assign_File("save/slot_02.sav");
                    if (game.save_02.Load())
                    {
                        game.log.File_Write("Loading from slot 2");
                        game_o.loaded.spawn();
                        game.game_active = true;
                        game.menu_active = false;
                        game.log.File_Write("Resuming game");
                        game.music_next_track = true;
                        sound.menu_select.play();
                    }
                }
            break;
            case 3://Save Slot 3 selected.
                if (load_menu.get_button_enabled(3))
                {
                    game.save_03.Assign_File("save/slot_03.sav");
                    if (game.save_03.Load())
                    {
                        game.log.File_Write("Loading from slot 3");
                        game_o.loaded.spawn();
                        game.game_active = true;
                        game.menu_active = false;
                        game.log.File_Write("Resuming game");
                        game.music_next_track = true;
                        sound.menu_select.play();
                    }
                }
            break;
            case 4://Save Slot 4 selected.
                if (load_menu.get_button_enabled(4))
                {
                    game.save_04.Assign_File("save/slot_04.sav");
                    if (game.save_04.Load())
                    {
                        game.log.File_Write("Loading from slot 4");
                        game_o.loaded.spawn();
                        game.game_active = true;
                        game.menu_active = false;
                        game.log.File_Write("Resuming game");
                        game.music_next_track = true;
                        sound.menu_select.play();
                    }
                }
            break;
            case 5://Save Slot 5 selected.
                if (load_menu.get_button_enabled(5))
                {
                    game.save_05.Assign_File("save/slot_05.sav");
                    if (game.save_05.Load())
                    {
                        game.log.File_Write("Loading from slot 5");
                        game_o.loaded.spawn();
                        game.game_active = true;
                        game.menu_active = false;
                        game.log.File_Write("Resuming game");
                        game.music_next_track = true;
                        sound.menu_select.play();
                    }
                }
            break;
            case 6://Save Slot 6 selected.
                if (load_menu.get_button_enabled(6))
                {
                    game.save_06.Assign_File("save/slot_06.sav");
                    if (game.save_06.Load())
                    {
                        game.log.File_Write("Loading from slot 6");
                        game_o.loaded.spawn();
                        game.game_active = true;
                        game.menu_active = false;
                        game.log.File_Write("Resuming game");
                        game.music_next_track = true;
                        sound.menu_select.play();
                    }
                }
            break;
            case 7://Save Slot 7 selected.
                if (load_menu.get_button_enabled(7))
                {
                    game.save_07.Assign_File("save/slot_07.sav");
                    if (game.save_07.Load())
                    {
                        game.log.File_Write("Loading from slot 7");
                        game_o.loaded.spawn();
                        game.game_active = true;
                        game.menu_active = false;
                        game.log.File_Write("Resuming game");
                        game.music_next_track = true;
                        sound.menu_select.play();
                    }
                }
            break;
            case 9://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from load menu. - button selected.");
            break;
            case 65533://menu choice changed
                sound.menu_move.play();
            break;
            case 65534://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.io.escape               = false;
                game.log.File_Write("Entering main menu, from load menu. - escape preses.");
            break;
            case 65535://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from load menu. - button clicked.");
            break;
            default:
            break;
        };
    };
    // ------------------- Save menu ------------
    activated_button = -1;
    if (game.menu_level == 6)
    {
        activated_button = save_menu.process();
        switch (activated_button)
        {
            case 1://Save Slot 1 selected.
                game.save_01.Assign_File("save/slot_01.sav");
                game.save_01.Save();
                game.log.File_Write("Saving to slot 1");
                game_o.saved.spawn();
                game.game_active = true;
                game.menu_active = false;
                game.log.File_Write("Resuming game");
                game.music_next_track = true;
                sound.menu_select.play();
                load_menu.button[1].set_enabled(true);
            break;
            case 2://Save Slot 2 selected.
                game.save_02.Assign_File("save/slot_02.sav");
                game.save_02.Save();
                game.log.File_Write("Saving to slot 2");
                game_o.saved.spawn();
                game.game_active = true;
                game.menu_active = false;
                game.log.File_Write("Resuming game");
                game.music_next_track = true;
                sound.menu_select.play();
                load_menu.button[2].set_enabled(true);
            break;
            case 3://Save Slot 3 selected.
                game.save_03.Assign_File("save/slot_03.sav");
                game.save_03.Save();
                game.log.File_Write("Saving to slot 3");
                game_o.saved.spawn();
                game.game_active = true;
                game.menu_active = false;
                game.log.File_Write("Resuming game");
                game.music_next_track = true;
                sound.menu_select.play();
                load_menu.button[3].set_enabled(true);
            break;
            case 4://Save Slot 4 selected.
                game.save_04.Assign_File("save/slot_04.sav");
                game.save_04.Save();
                game.log.File_Write("Saving to slot 4");
                game_o.saved.spawn();
                game.game_active = true;
                game.menu_active = false;
                game.log.File_Write("Resuming game");
                game.music_next_track = true;
                sound.menu_select.play();
                load_menu.button[4].set_enabled(true);
            break;
            case 5://Save Slot 5 selected.
                game.save_05.Assign_File("save/slot_05.sav");
                game.save_05.Save();
                game.log.File_Write("Saving to slot 5");
                game_o.saved.spawn();
                game.game_active = true;
                game.menu_active = false;
                game.log.File_Write("Resuming game");
                game.music_next_track = true;
                sound.menu_select.play();
                load_menu.button[5].set_enabled(true);
            break;
            case 6://Save Slot 6 selected.
                game.save_06.Assign_File("save/slot_06.sav");
                game.save_06.Save();
                game.log.File_Write("Saving to slot 6");
                game_o.saved.spawn();
                game.game_active = true;
                game.menu_active = false;
                game.log.File_Write("Resuming game");
                game.music_next_track = true;
                sound.menu_select.play();
                load_menu.button[6].set_enabled(true);
            break;
            case 7://Save Slot 7 selected.
                game.save_07.Assign_File("save/slot_07.sav");
                game.save_07.Save();
                game.log.File_Write("Saving to slot 7");
                game_o.saved.spawn();
                game.game_active = true;
                game.menu_active = false;
                game.log.File_Write("Resuming game");
                game.music_next_track = true;
                sound.menu_select.play();
                load_menu.button[7].set_enabled(true);
            break;
            case 9://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from save menu. - button selected.");
            break;
            case 65533://menu choice changed
                sound.menu_move.play();
            break;
            case 65534://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.io.escape               = false;
                game.log.File_Write("Entering main menu, from save menu. - escape preses.");
            break;
            case 65535://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from save menu. - button clicked.");
            break;
            default:
            break;
        };
    };
    // ------------------- Options Menu ------------
    activated_button = -1;
    if (game.menu_level == 7)
    {
        options_menu.set_toggle_data(4,game.config.Display_Fullscreen);
        activated_button = options_menu.process();
        options_menu.set_button_current_choice(3,game.config.Display_resolution-1);
        switch (activated_button)
        {
            case 4://Toggle Full-screen
                options_menu.set_toggle_data(4,!options_menu.get_toggle_data(4));
                game.config.Display_Fullscreen   = !game.config.Display_Fullscreen;
                if (game.config.Display_Fullscreen) SDL_SetVideoMode(game.config.Display_X_Resolution,game.config.Display_Y_Resolution,game.config.Display_BPS,SDL_OPENGL | SDL_FULLSCREEN);
                else                                SDL_SetVideoMode(game.config.Display_X_Resolution,game.config.Display_Y_Resolution,game.config.Display_BPS,SDL_OPENGL);
                game.graphics.init_gl(game.config.Display_X_Resolution,game.config.Display_Y_Resolution);
                load_textures();
            break;
            case 301://Choice 1 selected
                if (game.config.Display_resolution != options_menu.get_button_choice_position(3) + 0 -1)
                {
                    game.config.Display_resolution = options_menu.get_button_choice_position(3) + 0 -1;
                    set_resolution = true;
                }
            break;
            case 302://Choice 2 selected
                if (game.config.Display_resolution != options_menu.get_button_choice_position(3) + 1 -1)
                {
                    game.config.Display_resolution = options_menu.get_button_choice_position(3) + 1 -1;
                    set_resolution = true;
                }
            break;
            case 303://Choice 3 selected
                if (game.config.Display_resolution != options_menu.get_button_choice_position(3) + 2 -1)
                {
                    game.config.Display_resolution = options_menu.get_button_choice_position(3) + 2 -1;
                    set_resolution = true;
                }
            break;
            case 304://Choice 4 selected
                if (game.config.Display_resolution != options_menu.get_button_choice_position(3) + 3 -1)
                {
                    game.config.Display_resolution = options_menu.get_button_choice_position(3) + 3 -1;
                    set_resolution = true;
                }
            break;
            case 305://Choice 5 selected
                if (game.config.Display_resolution != options_menu.get_button_choice_position(3) + 4 -1)
                {
                    game.config.Display_resolution = options_menu.get_button_choice_position(3) + 4 -1;
                    set_resolution = true;
                }
            break;
            case 4001://left arrow on button 1
                game.config.Audio_Sound_Volume --;
                if (game.config.Audio_Sound_Volume < 0) game.config.Audio_Sound_Volume = 0;
                Mix_Volume(-1,game.config.Audio_Sound_Volume);
                options_menu.set_button_slider_position(1,game.config.Audio_Sound_Volume);
            break;
            case 5001://right arrow on button 1
                game.config.Audio_Sound_Volume++;
                if (game.config.Audio_Sound_Volume > 128) game.config.Audio_Sound_Volume = 128;
                Mix_Volume(-1,game.config.Audio_Sound_Volume);
                options_menu.set_button_slider_position(1,game.config.Audio_Sound_Volume);
            break;
            case 4002://left arrow on button 2
                game.config.Audio_Music_Volume--;
                if (game.config.Audio_Music_Volume < 0) game.config.Audio_Music_Volume = 0;
                Mix_VolumeMusic(game.config.Audio_Music_Volume);
                options_menu.set_button_slider_position(2,game.config.Audio_Music_Volume);
            break;
            case 5002://right arrow on button 2
                game.config.Audio_Music_Volume++;
                if (game.config.Audio_Music_Volume > 128) game.config.Audio_Music_Volume = 128;
                Mix_VolumeMusic(game.config.Audio_Music_Volume);
                options_menu.set_button_slider_position(2,game.config.Audio_Music_Volume);
            break;
            case 4003://left arrow on button 3
                options_menu.set_button_choice_position(3,options_menu.get_button_choice_position(3)-1);
                if (options_menu.get_button_choice_position(3) < 1) options_menu.set_button_choice_position(3,1);
            break;
            case 5003://right arrow on button 3
                options_menu.set_button_choice_position(3,options_menu.get_button_choice_position(3)+1);
                if (options_menu.get_button_choice_position(3) >= options_menu.get_number_of_choices(3)-(options_menu.get_number_of_visible_choices(3)-1)) options_menu.set_button_choice_position(3,options_menu.get_number_of_choices(3)-(options_menu.get_number_of_visible_choices(3)-1));
            break;
            case 6://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Options menu. - button selected.");
            break;
            case 65533://menu choice changed
                sound.menu_move.play();
            break;
            case 65534://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.io.escape               = false;
                game.log.File_Write("Entering main menu, from Options menu. - escape preses.");
            break;
            case 65535://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Options menu. - button clicked.");
            break;
            default:
            break;
        };
        if (set_resolution)
        {
            set_resolution = false;
            if (game.config.Display_resolution == 0)
            {
                game.config.Display_X_Resolution = 640;
                game.config.Display_Y_Resolution = 480;
            }
            if (game.config.Display_resolution == 1)
            {
                game.config.Display_X_Resolution = 800;
                game.config.Display_Y_Resolution = 600;
            }
            if (game.config.Display_resolution == 2)
            {
                game.config.Display_X_Resolution = 1024;
                game.config.Display_Y_Resolution = 768;
            }
            if (game.config.Display_resolution == 3)
            {
                game.config.Display_X_Resolution = 1280;
                game.config.Display_Y_Resolution = 1024;
            }
            if (game.config.Display_resolution == 4)
            {
                game.config.Display_X_Resolution = 1366;
                game.config.Display_Y_Resolution = 768;
            }
            if (game.config.Display_resolution == 5)
            {
                game.config.Display_X_Resolution = 1440;
                game.config.Display_Y_Resolution = 900;
            }
            if (game.config.Display_resolution == 6)
            {
                game.config.Display_X_Resolution = 1680;
                game.config.Display_Y_Resolution = 1050;
            }
            if (game.config.Display_resolution == 7)
            {
                game.config.Display_X_Resolution = 1920;
                game.config.Display_Y_Resolution = 1080;
            }
            game.config.mouse_resolution_x   = game.config.Display_X_Resolution;
            game.config.mouse_resolution_y   = game.config.Display_Y_Resolution;
            if (game.config.Display_Fullscreen) SDL_SetVideoMode(game.config.Display_X_Resolution,game.config.Display_Y_Resolution,game.config.Display_BPS,SDL_OPENGL | SDL_FULLSCREEN);
            else                                SDL_SetVideoMode(game.config.Display_X_Resolution,game.config.Display_Y_Resolution,game.config.Display_BPS,SDL_OPENGL);
            game.graphics.init_gl(game.config.Display_X_Resolution,game.config.Display_Y_Resolution);
            load_textures();
        }
    };
    // ------------------- Game Over Menu ------------
    activated_button = -1;
    if (game.menu_level == 8)
    {
        activated_button = game_over_menu.process();
        switch (activated_button)
        {
            case 1://Button 1 selected.
                sound.menu_select.play();
                game.menu_level              = 1;
                game.menu_active             = true;
                game.pdie_active             = false;
                game.outr_active             = false;
                game.game_active             = false;
                game.nlvl_active             = false;
                game.io.escape               = false;
                game.music_next_track        = true;
                game.log.File_Write("Entering main menu, from game over menu. - button 1 selected.");
            break;
            case 65533://menu choice changed
                sound.menu_move.play();
            break;
            case 65534://Return to main menu
                sound.menu_select.play();
                game.menu_level              = 1;
                game.menu_active             = true;
                game.pdie_active             = false;
                game.outr_active             = false;
                game.game_active             = false;
                game.nlvl_active             = false;
                game.io.escape               = false;
                game.music_next_track        = true;
                game.log.File_Write("Entering main menu, from game over menu. - button 1 selected.");
            break;
            case 65535://Return to main menu
                sound.menu_select.play();
                game.menu_level              = 1;
                game.menu_active             = true;
                game.pdie_active             = false;
                game.outr_active             = false;
                game.game_active             = false;
                game.nlvl_active             = false;
                game.io.escape               = false;
                game.music_next_track        = true;
                game.log.File_Write("Entering main menu, from game over menu. - button 1 selected.");
            break;
            default:
            break;
        };
    };
    // ------------------- Next Level Menu ------------
    activated_button = -1;
    if (game.menu_level == 9)
    {
        bool outro_time = false;
        activated_button = next_level_menu.process();
        switch (activated_button)
        {
            case 1://Button 1 selected.
                sound.menu_select.play();
                game_o.level++;
                if (game_o.level > 24) // killed last boss!
                {
                    outro_time = true;
                    game_o.level = 24;
                    if (!game_o.completed)
                    {
                        for(int count = 0; count < MAX_ENEMYS; count++) //finished the game, now its twice as hard! ;)
                        {
                            game_o.enemy[count].health += game_o.enemy[count].health;
                            if (game_o.enemy[count].health > 65535) game_o.enemy[count].health = 65535;
                        }
                        game_o.completed = true;
                    }
                }
                if (game_o.level_locked[game_o.level]) game_o.level_locked[game_o.level] = false;
                init_game_level(game_o.level);
                if (outro_time)
                {
                    game.music_next_track = true;
                    game.outr_active      = true;
                    game.game_active      = false;
                    game.menu_active      = false;
                    game.nlvl_active      = false;
                    game.background.set_data ( 1, 1, 1, 0.0f, 0.0f, 0.0015f, 0.0015f, 63);
                    game.background.set_data ( 2, 1, 1, 0.0f, 0.0f, 0.0015f, 0.0015f, 63);
                    game.background.set_data ( 3, 1, 1, 0.0f, 0.0f, 0.0020f, 0.0025f, 64);
                    game.background.set_data ( 4, 1, 1, 0.0f, 0.0f, 0.0020f, 0.0025f, 64);
                    game.background.set_movement_type(BOUNCE);
                    game.log.File_Write("Player just completed the game, proceeding to Outro!");
                }
                else
                {
                    game.music_next_track = true;
                    game.game_active      = true;
                    game.menu_active      = false;
                    game.nlvl_active      = false;
                    game.log.File_Write("Victory conditions met, player proceeding to next level!");
                }
                game.io.escape   = false;
            break;
            case 65533://menu choice changed
                sound.menu_move.play();
            break;
            case 65534://Return to main menu
                sound.menu_select.play();
                game_o.level++;
                if (game_o.level > 24) // killed last boss!
                {
                    outro_time = true;
                    game_o.level = 24;
                    if (!game_o.completed)
                    {
                        for(int count = 0; count < MAX_ENEMYS; count++) //finished the game, now its twice as hard! ;)
                        {
                            game_o.enemy[count].health += game_o.enemy[count].health;
                            if (game_o.enemy[count].health > 65535) game_o.enemy[count].health = 65535;
                        }
                        game_o.completed = true;
                    }
                }
                if (game_o.level_locked[game_o.level]) game_o.level_locked[game_o.level] = false;
                init_game_level(game_o.level);
                if (outro_time)
                {
                    game.music_next_track = true;
                    game.outr_active      = true;
                    game.game_active      = false;
                    game.menu_active      = false;
                    game.nlvl_active      = false;
                    game.background.set_data ( 1, 1, 1, 0.0f, 0.0f, 0.0015f, 0.0015f, 63);
                    game.background.set_data ( 2, 1, 1, 0.0f, 0.0f, 0.0015f, 0.0015f, 63);
                    game.background.set_data ( 3, 1, 1, 0.0f, 0.0f, 0.0020f, 0.0025f, 64);
                    game.background.set_data ( 4, 1, 1, 0.0f, 0.0f, 0.0020f, 0.0025f, 64);
                    game.background.set_movement_type(BOUNCE);
                    game.log.File_Write("Player just completed the game, proceeding to Outro!");
                }
                else
                {
                    game.music_next_track = true;
                    game.game_active      = true;
                    game.menu_active      = false;
                    game.nlvl_active      = false;
                    game.log.File_Write("Victory conditions met, player proceeding to next level!");
                }
                game.io.escape   = false;
            break;
            case 65535://Return to main menu
                sound.menu_select.play();
                game_o.level++;
                if (game_o.level > 24) // killed last boss!
                {
                    outro_time = true;
                    game_o.level = 24;
                    if (!game_o.completed)
                    {
                        for(int count = 0; count < MAX_ENEMYS; count++) //finished the game, now its twice as hard! ;)
                        {
                            game_o.enemy[count].health += game_o.enemy[count].health;
                            if (game_o.enemy[count].health > 65535) game_o.enemy[count].health = 65535;
                        }
                        game_o.completed = true;
                    }
                }
                if (game_o.level_locked[game_o.level]) game_o.level_locked[game_o.level] = false;
                init_game_level(game_o.level);
                if (outro_time)
                {
                    game.music_next_track = true;
                    game.outr_active      = true;
                    game.game_active      = false;
                    game.menu_active      = false;
                    game.nlvl_active      = false;
                    game.background.set_data ( 1, 1, 1, 0.0f, 0.0f, 0.0015f, 0.0015f, 63);
                    game.background.set_data ( 2, 1, 1, 0.0f, 0.0f, 0.0015f, 0.0015f, 63);
                    game.background.set_data ( 3, 1, 1, 0.0f, 0.0f, 0.0020f, 0.0025f, 64);
                    game.background.set_data ( 4, 1, 1, 0.0f, 0.0f, 0.0020f, 0.0025f, 64);
                    game.background.set_movement_type(BOUNCE);
                    game.log.File_Write("Player just completed the game, proceeding to Outro!");
                }
                else
                {
                    game.music_next_track = true;
                    game.game_active      = true;
                    game.menu_active      = false;
                    game.nlvl_active      = false;
                    game.log.File_Write("Victory conditions met, player proceeding to next level!");
                }
                game.io.escape   = false;
            break;
            default:
            break;
        };
    };
    // ------------------- Game Completed Menu ------------
    activated_button = -1;
    if (game.menu_level == 10)
    {
        activated_button = outro_menu.process();
        switch (activated_button)
        {
            case 1://Button 1 selected.
                sound.menu_select.play();
                game.menu_level              = 1;
                game.menu_active             = true;
                game.outr_active             = false;
                game.game_resume             = false;
                game.pdie_active             = false;
                game.game_active             = false;
                game.nlvl_active             = false;
                game.io.escape               = false;
                game.music_next_track        = true;
                game.log.File_Write("Entering main menu, from outro menu. - button 1 selected.");
            break;
            case 65533://menu choice changed
                sound.menu_move.play();
            break;
            case 65534://Return to main menu
                sound.menu_select.play();
                game.menu_level              = 1;
                game.menu_active             = true;
                game.outr_active             = false;
                game.game_resume             = false;
                game.pdie_active             = false;
                game.game_active             = false;
                game.nlvl_active             = false;
                game.io.escape               = false;
                game.music_next_track        = true;
                game.log.File_Write("Entering main menu, from outro menu. - button 1 selected.");
            break;
            case 65535://Return to main menu
                sound.menu_select.play();
                game.menu_level              = 1;
                game.menu_active             = true;
                game.outr_active             = false;
                game.game_resume             = false;
                game.pdie_active             = false;
                game.game_active             = false;
                game.nlvl_active             = false;
                game.io.escape               = false;
                game.music_next_track        = true;
                game.log.File_Write("Entering main menu, from outro menu. - button 1 selected.");
            break;
            default:
            break;
        };
    };
    // ------------------- Pause Menu ------------
    activated_button = -1;
    if (game.menu_level == 11)
    {
        activated_button = pause_menu.process();
        switch (activated_button)
        {
            case 1://Button 1 selected.
                sound.menu_select.play();
                game.game_paused      = false;
                game.game_active      = true;
                game.io.escape        = false;
                game.io.select        = false;
                game.io.pause         = false;
                game.log.File_Write("Entering game menu, from pause menu. - button 1 selected.");
            break;
            case 65533://menu choice changed
                sound.menu_move.play();
            break;
            case 65534://Return to game
                sound.menu_select.play();
                game.game_paused      = false;
                game.game_active      = true;
                game.io.escape        = false;
                game.io.select        = false;
                game.io.pause         = false;
                game.log.File_Write("Entering game menu, from pause menu. - button 1 selected.");
            break;
            case 65535://Return to game
                sound.menu_select.play();
                game.game_paused      = false;
                game.game_active      = true;
                game.io.escape        = false;
                game.io.select        = false;
                game.io.pause         = false;
                game.log.File_Write("Entering game menu, from pause menu. - button 1 selected.");
            break;
            default:
            break;
        };
    };
    //-------------------------------------------------------------------------------------------------------------------
   return(0);
};

//---------------------------------------------------------------------------------------------------------------
int diplay_menu (void)
{
    glPushMatrix();
    glDisable(GL_DEPTH_TEST);
    if (game.menu_level != 11)
    {
        game.background.draw();
        /*----------------------------------------------------------------------*/
        if (game.menu_level <= 7) bind_texture(30);  //logo
        if (game.menu_level == 8) bind_texture(330); //logo
        if (game.menu_level >= 9) bind_texture(30);  //logo
        glLoadIdentity();
        glBegin( GL_QUADS );
        glTexCoord2i( 0, 1 );glVertex3f(-0.9f, 0.75f, 0.0f );
        glTexCoord2i( 0, 0 );glVertex3f(-0.9f, 1.0f, 0.0f );
        glTexCoord2i( 1, 0 );glVertex3f( 0.9f, 1.0f, 0.0f );
        glTexCoord2i( 1, 1 );glVertex3f( 0.9f, 0.75f, 0.0f );
        glEnd();
    }
    font.font_1.Write(255,255,255,64,-0.98f,-0.98f,2,8,"www.PhysHexGames.co.nr");
/*-----------------------------------------------------------------------------*/
   if (game.menu_level == 8) //Player death screen
   {
      bind_texture(329); //Game Over
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-0.4f, 0.55f, 0.0f );
	  glTexCoord2i( 0, 0 );glVertex3f(-0.4f, 0.75f, 0.0f );
	  glTexCoord2i( 1, 0 );glVertex3f( 0.4f, 0.75f, 0.0f );
	  glTexCoord2i( 1, 1 );glVertex3f( 0.4f, 0.55f, 0.0f );
      glEnd();

      bind_texture(332); //explosion
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-0.6f,-0.70f, 0.0f );
	  glTexCoord2i( 0, 0 );glVertex3f(-0.6f, 0.50f, 0.0f );
	  glTexCoord2i( 1, 0 );glVertex3f( 0.6f, 0.50f, 0.0f );
	  glTexCoord2i( 1, 1 );glVertex3f( 0.6f,-0.70f, 0.0f );
      glEnd();
   }
/*-----------------------------------------------------------------------------*/
   if (game.menu_level == 9) //Next level screen
   {
      int level_t = game_o.level + 1;
      if (level_t > 24) level_t = 24;
      bind_texture(333); //Congratulations
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-0.5f, 0.55f, 0.0f );
	  glTexCoord2i( 0, 0 );glVertex3f(-0.5f, 0.75f, 0.0f );
	  glTexCoord2i( 1, 0 );glVertex3f( 0.5f, 0.75f, 0.0f );
	  glTexCoord2i( 1, 1 );glVertex3f( 0.5f, 0.55f, 0.0f );
      glEnd();

      if (game_o.level_locked[level_t])
      {
         bind_texture(335); //level unlocked
         glLoadIdentity();
         glBegin( GL_QUADS );
	     glTexCoord2i( 0, 1 );glVertex3f(-0.5f, 0.35f, 0.0f );
	     glTexCoord2i( 0, 0 );glVertex3f(-0.5f, 0.55f, 0.0f );
	     glTexCoord2i( 1, 0 );glVertex3f( 0.5f, 0.55f, 0.0f );
   	     glTexCoord2i( 1, 1 );glVertex3f( 0.5f, 0.35f, 0.0f );
         glEnd();
      }

      bind_texture(147+level_t); //next level game screen preview
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-0.5f,-0.70f, 0.0f );
	  glTexCoord2i( 0, 0 );glVertex3f(-0.5f, 0.30f, 0.0f );
	  glTexCoord2i( 1, 0 );glVertex3f( 0.5f, 0.30f, 0.0f );
	  glTexCoord2i( 1, 1 );glVertex3f( 0.5f,-0.70f, 0.0f );
      glEnd();

      font.font_1.Write(255,255,255,64,-1.00f,-0.00f,3,9,L"Level score - ", game_o.level_score);
      font.font_1.Write(255,255,255,64,-1.00f,-0.10f,3,9,L"Total score - ", game_o.score);
      font.font_1.Write(255,255,255,64,-1.00f,-0.20f,3,9,L"Level kills - ", game_o.level_kills);
      font.font_1.Write(255,255,255,64,-1.00f,-0.30f,3,9,L"Total kills - ", game_o.kills);
      font.font_1.Write(255,255,255,64,-1.00f,-0.40f,3,9,L"Kill rate   - ./'",(((float)game_o.level_kills/(float)game_o.level_spawened)*100));
   }
/*-----------------------------------------------------------------------------*/
   if (game.menu_level == 10) //Outro screen
   {
      bind_texture(339); //credits
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-1.0f,-1.0f, 0.0f );
	  glTexCoord2i( 0, 0 );glVertex3f(-1.0f, 1.0f, 0.0f );
	  glTexCoord2i( 1, 0 );glVertex3f( 1.0f, 1.0f, 0.0f );
	  glTexCoord2i( 1, 1 );glVertex3f( 1.0f,-1.0f, 0.0f );
      glEnd();
   }
/*-----------------------------------------------------------------------------*/
   if (game.menu_level == 11) //Pause screen
   {
   }
/*-----------------------------------------------------------------------------*/
   if (game.menu_level ==  1) main_menu.draw();//main_menu
   if (game.menu_level ==  2) star_map_menu.draw();//star_map_menu
   if (game.menu_level ==  3) customize_starship_menu.draw();//customize_starship_menu
   if (game.menu_level ==  4) achievements_menu.draw();//achievements_menu
   if (game.menu_level ==  5) load_menu.draw();//load_menu
   if (game.menu_level ==  6) save_menu.draw();//save_menu
   if (game.menu_level ==  7) options_menu.draw();//options_menu
   if (game.menu_level ==  8) game_over_menu.draw();//game_over_menu
   if (game.menu_level ==  9) next_level_menu.draw(); //next_level_menu
   if (game.menu_level == 10) outro_menu.draw(); //outro_menu
   if (game.menu_level == 11) pause_menu.draw(); //pause_menu
/*-----------------------------------------------------------------------------*/
   glPopMatrix();
   return(0);
};

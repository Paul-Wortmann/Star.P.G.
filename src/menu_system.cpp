/**
 * Copyright (C) 2011 Paul Wortmann, PhysHex Games, www.physhexgames.co.nr
 * This file is part of Star.P.G.
 *
 * Star.P.G. is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Star.P.G. is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Star.P.G. If not, see <http://www.gnu.org/licenses/>.
 *
 * @author Paul Wortmann
 * @license GPL
 */

#include <GL/gl.h>
#include "menu_system.hpp"
#include "game.hpp"
#include "RAGE/rage.hpp"
#include "load_resources.hpp"
#include "levels.hpp"

extern  game_class               game;
extern  sound_type               sound;
extern  music_type               music;
extern  texture_type             texture;
extern  font_type                font;
extern  game_type                game_o;
extern  save_game_class          save_01;
extern  save_game_class          save_02;
extern  save_game_class          save_03;
extern  save_game_class          save_04;
extern  save_game_class          save_05;
extern  save_game_class          save_06;
extern  save_game_class          save_07;
        menu_type                menu;

        menu_class               main_menu(9);
        menu_class               star_map_menu(9);
        menu_class               customize_starship_menu(9);
        menu_class               achievements_menu(9);
        menu_class               save_menu(9);
        menu_class               load_menu(9);
        menu_class               options_menu(9);

int init_menu   (void)
{
    //------ setup menu background -----------
    game.background.set_movement_type(BOUNCE);
    game.background.set_data ( 1, 1, 0, 1.0f, 0.0f, 0.0005f, 0.00040f, 63);
    game.background.set_data ( 2, 1, 1, 0.0f, 1.0f, 0.0010f, 0.00095f, 64);
    //------ setup "main" menu -----------
    main_menu.set_menu_title("Main Menu");
    main_menu.set_keyboard_delay(16);
    main_menu.set_mouse_delay(24);
    main_menu.set_pos(0.0f,-0.1f,0.001f);
    main_menu.set_size(0.8f,1.7f);
    main_menu.set_menu_font(1);
    main_menu.set_image_background(395);
    main_menu.set_button_zoom(true,0.04f,0.005f);
    main_menu.set_button_images(395,395,395,172,402,403,404);
    main_menu.set_color_normal(128,128,255,255);
    main_menu.set_color_highlighted(192,192,255,255);
    main_menu.set_color_disabled(064,064,128,128);
    main_menu.set_number_of_buttons(9);
    main_menu.set_button_data  ( 1,"Star Map");
    main_menu.set_button_data  ( 2,"Customize Starship");
    main_menu.set_button_data  ( 3,"Achievements");
    main_menu.set_button_data  ( 4,"Load Game");
    main_menu.set_button_data  ( 5,"Save Game");
    main_menu.set_button_data  ( 6,"Resume Game");
    main_menu.set_button_data  ( 7,"Options");
    main_menu.set_button_active( 8,false);
    main_menu.set_button_data  ( 9,"Quit Game");
    main_menu.set_buttons_auto();
    main_menu.set_close_button_data(396,397);
    main_menu.set_title_data("Main Menu");//needs to be called last due to size generated by number of buttons etc....
    //------ setup "star map" menu -----------
    star_map_menu.set_menu_title("Star Map");
    star_map_menu.set_keyboard_delay(16);
    star_map_menu.set_mouse_delay(24);
    star_map_menu.set_pos(0.0f,-0.1f,0.001f);
    star_map_menu.set_size(1.8f,1.2f);
    star_map_menu.set_menu_font(1);
    star_map_menu.set_image_background(395);
    star_map_menu.set_button_zoom(true,0.04f,0.005f);
    star_map_menu.set_button_images(395,395,395,172,402,403,404);
    star_map_menu.set_color_normal(128,128,255,255);
    star_map_menu.set_color_highlighted(192,192,255,255);
    star_map_menu.set_color_disabled(064,064,128,128);
    star_map_menu.set_number_of_buttons(5);
    star_map_menu.set_number_of_choices(1,25);
    star_map_menu.set_button_choice_position(1,1);
    star_map_menu.set_button_data( 1,"Level Select");
    star_map_menu.set_button_choice_data(1, 1,147,"Taranis"   , true,!game_o.level_locked[ 0]);
    star_map_menu.set_button_choice_data(1, 2,148,"Teutates"  , true,!game_o.level_locked[ 1]);
    star_map_menu.set_button_choice_data(1, 3,149,"Esus"      , true,!game_o.level_locked[ 2]);
    star_map_menu.set_button_choice_data(1, 4,150,"Cantidious", true,!game_o.level_locked[ 3]);
    star_map_menu.set_button_choice_data(1, 5,151,"Vulcan"    , true,!game_o.level_locked[ 4]);
    star_map_menu.set_button_choice_data(1, 6,152,"Bacchus"   , true,!game_o.level_locked[ 5]);
    star_map_menu.set_button_choice_data(1, 7,153,"Janus"     , true,!game_o.level_locked[ 6]);
    star_map_menu.set_button_choice_data(1, 8,154,"Wrathorn"  , true,!game_o.level_locked[ 7]);
    star_map_menu.set_button_choice_data(1, 9,155,"Tartarus"  , true,!game_o.level_locked[ 8]);
    star_map_menu.set_button_choice_data(1,10,156,"Erebus"    , true,!game_o.level_locked[ 9]);
    star_map_menu.set_button_choice_data(1,11,157,"Nyx"       , true,!game_o.level_locked[10]);
    star_map_menu.set_button_choice_data(1,12,158,"Dediun"    , true,!game_o.level_locked[11]);
    star_map_menu.set_button_choice_data(1,13,159,"Niflheim"  , true,!game_o.level_locked[12]);
    star_map_menu.set_button_choice_data(1,14,160,"Muspelhiem", true,!game_o.level_locked[13]);
    star_map_menu.set_button_choice_data(1,15,161,"Hel"       , true,!game_o.level_locked[14]);
    star_map_menu.set_button_choice_data(1,16,162,"Paganite"  , true,!game_o.level_locked[15]);
    star_map_menu.set_button_choice_data(1,17,163,"Pixiu"     , true,!game_o.level_locked[16]);
    star_map_menu.set_button_choice_data(1,18,164,"Xiao"      , true,!game_o.level_locked[17]);
    star_map_menu.set_button_choice_data(1,19,165,"Fuxi"      , true,!game_o.level_locked[18]);
    star_map_menu.set_button_choice_data(1,20,166,"Haxorific" , true,!game_o.level_locked[19]);
    star_map_menu.set_button_choice_data(1,21,167,"Byakko"    , true,!game_o.level_locked[20]);
    star_map_menu.set_button_choice_data(1,22,168,"Enenra"    , true,!game_o.level_locked[21]);
    star_map_menu.set_button_choice_data(1,23,169,"Tengu"     , true,!game_o.level_locked[22]);
    star_map_menu.set_button_choice_data(1,24,170,"Robonoid"  , true,!game_o.level_locked[23]);
    star_map_menu.set_button_choice_data(1,25,171,"Oyabun"    , true,!game_o.level_locked[24]);
    star_map_menu.set_button_active( 2,false);
    star_map_menu.set_button_active( 3,false);
    star_map_menu.set_button_active( 4,false);
    star_map_menu.set_button_data  ( 5,"Main Menu");
    star_map_menu.set_buttons_auto();
    star_map_menu.set_close_button_data(396,397);
    star_map_menu.set_button_arrow_data_auto(1);
    star_map_menu.set_title_data("Star Map");//needs to be called last due to size generated by number of buttons etc....
    //------ setup "customize starship" menu -----------
    customize_starship_menu.set_menu_title("Customize Starship");
    customize_starship_menu.set_keyboard_delay(16);
    customize_starship_menu.set_mouse_delay(24);
    customize_starship_menu.set_pos(0.0f,-0.1f,0.001f);
    customize_starship_menu.set_size(0.8f,1.7f);
    customize_starship_menu.set_menu_font(1);
    customize_starship_menu.set_image_background(395);
    customize_starship_menu.set_button_zoom(true,0.04f,0.005f);
    customize_starship_menu.set_button_images(395,395,395,172,402,403,404);
    customize_starship_menu.set_color_normal(128,128,255,255);
    customize_starship_menu.set_color_highlighted(192,192,255,255);
    customize_starship_menu.set_color_disabled(064,064,128,128);
    customize_starship_menu.set_number_of_buttons(9);
    customize_starship_menu.set_button_active( 1,false);
    customize_starship_menu.set_button_active( 2,false);
    customize_starship_menu.set_button_active( 3,false);
    customize_starship_menu.set_button_active( 4,false);
    customize_starship_menu.set_button_active( 5,false);
    customize_starship_menu.set_button_active( 6,false);
    customize_starship_menu.set_button_active( 7,false);
    customize_starship_menu.set_button_active( 8,false);
    customize_starship_menu.set_button_data  ( 9,"Main Menu");
    customize_starship_menu.set_buttons_auto();
    customize_starship_menu.set_close_button_data(396,397);
    customize_starship_menu.set_title_data("Customize Starship");//needs to be called last due to size generated by number of buttons etc....
    //------ setup "achievements" menu -----------
    achievements_menu.set_menu_title("Achievements");
    achievements_menu.set_keyboard_delay(16);
    achievements_menu.set_mouse_delay(24);
    achievements_menu.set_pos(0.0f,-0.1f,0.001f);
    achievements_menu.set_size(0.8f,1.7f);
    achievements_menu.set_menu_font(1);
    achievements_menu.set_image_background(395);
    achievements_menu.set_button_zoom(true,0.04f,0.005f);
    achievements_menu.set_button_images(395,395,395,172,402,403,404);
    achievements_menu.set_color_normal(128,128,255,255);
    achievements_menu.set_color_highlighted(192,192,255,255);
    achievements_menu.set_color_disabled(064,064,128,128);
    achievements_menu.set_number_of_buttons(9);
    achievements_menu.set_button_active( 1,false);
    achievements_menu.set_button_active( 2,false);
    achievements_menu.set_button_active( 3,false);
    achievements_menu.set_button_active( 4,false);
    achievements_menu.set_button_active( 5,false);
    achievements_menu.set_button_active( 6,false);
    achievements_menu.set_button_active( 7,false);
    achievements_menu.set_button_active( 8,false);
    achievements_menu.set_button_data  ( 9,"Main Menu");
    achievements_menu.set_buttons_auto();
    achievements_menu.set_close_button_data(396,397);
    achievements_menu.set_title_data("Achievements");//needs to be called last due to size generated by number of buttons etc....
    //------ setup "save game" menu -----------
    save_menu.set_menu_title("Save Menu");
    save_menu.set_keyboard_delay(16);
    save_menu.set_mouse_delay(24);
    save_menu.set_pos(0.0f,-0.1f,0.001f);
    save_menu.set_size(0.8f,1.7f);
    save_menu.set_menu_font(1);
    save_menu.set_image_background(395);
    save_menu.set_button_zoom(true,0.04f,0.005f);
    save_menu.set_button_images(395,395,395,172,402,403,404);
    save_menu.set_color_normal(128,128,255,255);
    save_menu.set_color_highlighted(192,192,255,255);
    save_menu.set_color_disabled(064,064,128,128);
    save_menu.set_number_of_buttons(9);
    save_menu.set_button_data  ( 1,"Save Slot 1");
    save_menu.set_button_data  ( 2,"Save Slot 2");
    save_menu.set_button_data  ( 3,"Save Slot 3");
    save_menu.set_button_data  ( 4,"Save Slot 4");
    save_menu.set_button_data  ( 5,"Save Slot 5");
    save_menu.set_button_data  ( 6,"Save Slot 6");
    save_menu.set_button_data  ( 7,"Save Slot 7");
    save_menu.set_button_active( 8,false);
    save_menu.set_button_data  ( 9,"Main Menu");
    save_menu.set_buttons_auto();
    save_menu.set_close_button_data(396,397);
    save_menu.set_title_data("Save Menu");//needs to be called last due to size generated by number of buttons etc....
    //------ setup "load game" menu -----------
    load_menu.set_menu_title("Load Menu");
    load_menu.set_keyboard_delay(16);
    load_menu.set_mouse_delay(24);
    load_menu.set_pos(0.0f,-0.1f,0.001f);
    load_menu.set_size(0.8f,1.7f);
    load_menu.set_menu_font(1);
    load_menu.set_image_background(395);
    load_menu.set_button_zoom(true,0.04f,0.005f);
    load_menu.set_button_images(395,395,395,172,402,403,404);
    load_menu.set_color_normal(128,128,255,255);
    load_menu.set_color_highlighted(192,192,255,255);
    load_menu.set_color_disabled(064,064,128,128);
    load_menu.set_number_of_buttons(9);
    load_menu.set_button_data  ( 1,"Save Slot 1");
    load_menu.set_button_data  ( 2,"Save Slot 2");
    load_menu.set_button_data  ( 3,"Save Slot 3");
    load_menu.set_button_data  ( 4,"Save Slot 4");
    load_menu.set_button_data  ( 5,"Save Slot 5");
    load_menu.set_button_data  ( 6,"Save Slot 6");
    load_menu.set_button_data  ( 7,"Save Slot 7");
    load_menu.set_button_active( 8,false);
    load_menu.set_button_data  ( 9,"Main Menu");
    load_menu.set_buttons_auto();
    load_menu.set_close_button_data(396,397);
    load_menu.set_title_data("Load Menu");//needs to be called last due to size generated by number of buttons etc....
    //------ setup "options" menu -----------
    options_menu.set_menu_title("Options");
    options_menu.set_keyboard_delay(16);
    options_menu.set_mouse_delay(24);
    options_menu.set_pos(0.0f,-0.1f,0.001f);
    options_menu.set_size(0.8f,1.7f);
    options_menu.set_menu_font(1);
    options_menu.set_image_background(395);
    options_menu.set_button_zoom(true,0.04f,0.005f);
    options_menu.set_button_images(395,395,395,172,402,403,404);
    options_menu.set_color_normal(128,128,255,255);
    options_menu.set_color_highlighted(192,192,255,255);
    options_menu.set_color_disabled(064,064,128,128);
    options_menu.set_number_of_buttons(9);
    options_menu.set_button_active( 1,false);
    options_menu.set_button_active( 2,false);
    options_menu.set_button_active( 3,false);
    options_menu.set_button_active( 4,false);
    options_menu.set_button_active( 5,false);
    options_menu.set_button_active( 6,false);
    options_menu.set_button_active( 7,false);
    options_menu.set_button_active( 8,false);
    options_menu.set_button_data  ( 9,"Main Menu");
    options_menu.set_buttons_auto();
    options_menu.set_close_button_data(396,397);
    options_menu.set_title_data("Options");//needs to be called last due to size generated by number of buttons etc....
    return(0);
};

//---------------------------------------------------------------------------------------
int process_menu(void)
{
    int activated_button = -1;
    game.background.process();
    // ------------------- main menu ------------
    activated_button = -1;
    if (game.menu_level == 1)
    {
        if (game.game_resume) main_menu.button[5].set_enabled(true);
        else main_menu.button[5].set_enabled(false);
        if (game.game_resume) main_menu.button[6].set_enabled(true);
        else main_menu.button[6].set_enabled(false);
        activated_button = main_menu.process();
        switch (activated_button)
        {
            case 1://Star Map
                sound.menu_select.play();
                game.menu_level = 2;
                game.log.File_Write("Entering 'Star Map' menu.");
            break;
            case 2://Customize Starship
                sound.menu_select.play();
                game.menu_level = 3;
                game.log.File_Write("Entering 'Customize Starship' menu.");
            break;
            case 3://Achievements
                sound.menu_select.play();
                game.menu_level = 4;
                game.log.File_Write("Entering 'Achievements' menu.");
            break;
            case 4://Load Game
                sound.menu_select.play();
                game.menu_level = 5;
                game.log.File_Write("Entering 'Load Game' menu.");
            break;
            case 5://Save Game
                if (game.game_resume)
                {
                    sound.menu_select.play();
                    game.menu_level = 6;
                    game.log.File_Write("Entering 'Save Game' menu.");
                }
            break;
            case 6://Resume Game
                if (game.game_resume)
                {
                    sound.menu_select.play();
                    game.music_next_track = true;
                    game.game_active      = true;
                    game.menu_active      = false;
                    game.log.File_Write("Resuming Game");
                }
            break;
            case 7://Options
                sound.menu_select.play();
                game.menu_level = 7;
                game.log.File_Write("Entering 'Options' menu.");
            break;
            case 8://NA
            break;
            case 9://Quit Game
                sound.menu_select.play();
                game.status_quit_active = true;
                game.log.File_Write("User terminating game - 'Quit Game' selected!");
            break;
            case 65533://only move no select.
                sound.menu_move.play();
            break;
            case 65534:// escape pressed on keyboard.
                sound.menu_select.play();
                game.status_quit_active = true;
                game.log.File_Write("User terminating game - keyboard escape pressed!");
            break;
            case 65535:// close button clicked.
                sound.menu_select.play();
                game.status_quit_active = true;
                game.log.File_Write("User terminating game - clicked escape button!");
            break;
            default:
            break;
        };
    };
    // ------------------- Star_Map Menu ------------
    activated_button = -1;
    if (game.menu_level == 2)
    {
        star_map_menu.set_button_choice_enabled(1, 1,!game_o.level_locked[ 0]);
        star_map_menu.set_button_choice_enabled(1, 2,!game_o.level_locked[ 1]);
        star_map_menu.set_button_choice_enabled(1, 3,!game_o.level_locked[ 2]);
        star_map_menu.set_button_choice_enabled(1, 4,!game_o.level_locked[ 3]);
        star_map_menu.set_button_choice_enabled(1, 5,!game_o.level_locked[ 4]);
        star_map_menu.set_button_choice_enabled(1, 6,!game_o.level_locked[ 5]);
        star_map_menu.set_button_choice_enabled(1, 7,!game_o.level_locked[ 6]);
        star_map_menu.set_button_choice_enabled(1, 8,!game_o.level_locked[ 7]);
        star_map_menu.set_button_choice_enabled(1, 9,!game_o.level_locked[ 8]);
        star_map_menu.set_button_choice_enabled(1,10,!game_o.level_locked[ 9]);
        star_map_menu.set_button_choice_enabled(1,11,!game_o.level_locked[10]);
        star_map_menu.set_button_choice_enabled(1,12,!game_o.level_locked[11]);
        star_map_menu.set_button_choice_enabled(1,13,!game_o.level_locked[12]);
        star_map_menu.set_button_choice_enabled(1,14,!game_o.level_locked[13]);
        star_map_menu.set_button_choice_enabled(1,15,!game_o.level_locked[14]);
        star_map_menu.set_button_choice_enabled(1,16,!game_o.level_locked[15]);
        star_map_menu.set_button_choice_enabled(1,17,!game_o.level_locked[16]);
        star_map_menu.set_button_choice_enabled(1,18,!game_o.level_locked[17]);
        star_map_menu.set_button_choice_enabled(1,19,!game_o.level_locked[18]);
        star_map_menu.set_button_choice_enabled(1,20,!game_o.level_locked[19]);
        star_map_menu.set_button_choice_enabled(1,21,!game_o.level_locked[20]);
        star_map_menu.set_button_choice_enabled(1,22,!game_o.level_locked[21]);
        star_map_menu.set_button_choice_enabled(1,23,!game_o.level_locked[22]);
        star_map_menu.set_button_choice_enabled(1,24,!game_o.level_locked[23]);
        star_map_menu.set_button_choice_enabled(1,25,!game_o.level_locked[24]);
        activated_button = star_map_menu.process();
        switch (activated_button)
        {
            case 1://

            break;
            case 5://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Star_Map menu. - button selected.");
            break;
            case 65533://menu choice changed
                sound.menu_move.play();
            break;
            case 65534://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Star_Map menu. - escape preses.");
            break;
            case 65535://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Star_Map menu. - button clicked.");
            break;
            default:
            break;
        };
    };
    // ------------------- Customize_Starship Menu ------------
    activated_button = -1;
    if (game.menu_level == 3)
    {
        activated_button = customize_starship_menu.process();
        switch (activated_button)
        {
            case 1://

            break;
            case 9://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Customize_Starship menu. - button selected.");
            break;
            case 65533://menu choice changed
                sound.menu_move.play();
            break;
            case 65534://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Customize_Starship menu. - escape preses.");
            break;
            case 65535://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Customize_Starship menu. - button clicked.");
            break;
            default:
            break;
        };
    };
    // ------------------- Achievements Menu ------------
    activated_button = -1;
    if (game.menu_level == 4)
    {
        activated_button = achievements_menu.process();
        switch (activated_button)
        {
            case 1://

            break;
            case 9://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Achievements menu. - button selected.");
            break;
            case 65533://menu choice changed
                sound.menu_move.play();
            break;
            case 65534://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Achievements menu. - escape preses.");
            break;
            case 65535://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Achievements menu. - button clicked.");
            break;
            default:
            break;
        };
    };
    // ------------------- Load menu ------------
    activated_button = -1;
    if (game.menu_level == 5)
    {
        if (save_01.File_Exists()) load_menu.button[1].set_enabled(true);
        else load_menu.button[1].set_enabled(false);
        if (save_01.File_Exists()) load_menu.button[1].set_enabled(true);
        else load_menu.button[1].set_enabled(false);
        if (save_02.File_Exists()) load_menu.button[2].set_enabled(true);
        else load_menu.button[2].set_enabled(false);
        if (save_03.File_Exists()) load_menu.button[3].set_enabled(true);
        else load_menu.button[3].set_enabled(false);
        if (save_04.File_Exists()) load_menu.button[4].set_enabled(true);
        else load_menu.button[4].set_enabled(false);
        if (save_05.File_Exists()) load_menu.button[5].set_enabled(true);
        else load_menu.button[5].set_enabled(false);
        if (save_06.File_Exists()) load_menu.button[6].set_enabled(true);
        else load_menu.button[6].set_enabled(false);
        if (save_07.File_Exists()) load_menu.button[7].set_enabled(true);
        else load_menu.button[7].set_enabled(false);
        activated_button = load_menu.process();
        switch (activated_button)
        {
            case 1://Save Slot 1 selected.
                if (save_01.Load())
                {
                    game.log.File_Write("Loading from slot 1");
                    spawn_loaded();
                    game.game_active = true;
                    game.menu_active = false;
                    game.log.File_Write("Resuming game");
                    game.music_next_track = true;
                    sound.menu_select.play();
                }
            break;
            case 2://Save Slot 2 selected.
                if (save_02.Load())
                {
                    game.log.File_Write("Loading from slot 2");
                    spawn_loaded();
                    game.game_active = true;
                    game.menu_active = false;
                    game.log.File_Write("Resuming game");
                    game.music_next_track = true;
                    sound.menu_select.play();
                }
            break;
            case 3://Save Slot 3 selected.
                if (save_03.Load())
                {
                    game.log.File_Write("Loading from slot 3");
                    spawn_loaded();
                    game.game_active = true;
                    game.menu_active = false;
                    game.log.File_Write("Resuming game");
                    game.music_next_track = true;
                    sound.menu_select.play();
                }
            break;
            case 4://Save Slot 4 selected.
                if (save_04.Load())
                {
                    game.log.File_Write("Loading from slot 4");
                    spawn_loaded();
                    game.game_active = true;
                    game.menu_active = false;
                    game.log.File_Write("Resuming game");
                    game.music_next_track = true;
                    sound.menu_select.play();
                }
            break;
            case 5://Save Slot 5 selected.
                if (save_05.Load())
                {
                    game.log.File_Write("Loading from slot 5");
                    spawn_loaded();
                    game.game_active = true;
                    game.menu_active = false;
                    game.log.File_Write("Resuming game");
                    game.music_next_track = true;
                    sound.menu_select.play();
                }
            break;
            case 6://Save Slot 6 selected.
                if (save_06.Load())
                {
                    game.log.File_Write("Loading from slot 6");
                    spawn_loaded();
                    game.game_active = true;
                    game.menu_active = false;
                    game.log.File_Write("Resuming game");
                    game.music_next_track = true;
                    sound.menu_select.play();
                }
            break;
            case 7://Save Slot 7 selected.
                if (save_07.Load())
                {
                    game.log.File_Write("Loading from slot 7");
                    spawn_loaded();
                    game.game_active = true;
                    game.menu_active = false;
                    game.log.File_Write("Resuming game");
                    game.music_next_track = true;
                    sound.menu_select.play();
                }
            break;
            case 9://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from load menu. - button selected.");
            break;
            case 65533://menu choice changed
                sound.menu_move.play();
            break;
            case 65534://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from load menu. - escape preses.");
            break;
            case 65535://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from load menu. - button clicked.");
            break;
            default:
            break;
        };
    };
    // ------------------- Save menu ------------
    activated_button = -1;
    if (game.menu_level == 6)
    {
        activated_button = save_menu.process();
        switch (activated_button)
        {
            case 1://Save Slot 1 selected.
                save_01.Save();
                game.log.File_Write("Saving to slot 1");
                spawn_saved();
                game.game_active = true;
                game.menu_active = false;
                game.log.File_Write("Resuming game");
                game.music_next_track = true;
                sound.menu_select.play();
            break;
            case 2://Save Slot 2 selected.
                save_02.Save();
                game.log.File_Write("Saving to slot 2");
                spawn_saved();
                game.game_active = true;
                game.menu_active = false;
                game.log.File_Write("Resuming game");
                game.music_next_track = true;
                sound.menu_select.play();
            break;
            case 3://Save Slot 3 selected.
                save_03.Save();
                game.log.File_Write("Saving to slot 3");
                spawn_saved();
                game.game_active = true;
                game.menu_active = false;
                game.log.File_Write("Resuming game");
                game.music_next_track = true;
                sound.menu_select.play();
            break;
            case 4://Save Slot 4 selected.
                save_04.Save();
                game.log.File_Write("Saving to slot 4");
                spawn_saved();
                game.game_active = true;
                game.menu_active = false;
                game.log.File_Write("Resuming game");
                game.music_next_track = true;
                sound.menu_select.play();
            break;
            case 5://Save Slot 5 selected.
                save_05.Save();
                game.log.File_Write("Saving to slot 5");
                spawn_saved();
                game.game_active = true;
                game.menu_active = false;
                game.log.File_Write("Resuming game");
                game.music_next_track = true;
                sound.menu_select.play();
            break;
            case 6://Save Slot 6 selected.
                save_03.Save();
                game.log.File_Write("Saving to slot 6");
                spawn_saved();
                game.game_active = true;
                game.menu_active = false;
                game.log.File_Write("Resuming game");
                game.music_next_track = true;
                sound.menu_select.play();
            break;
            case 7://Save Slot 7 selected.
                save_07.Save();
                game.log.File_Write("Saving to slot 7");
                spawn_saved();
                game.game_active = true;
                game.menu_active = false;
                game.log.File_Write("Resuming game");
                game.music_next_track = true;
                sound.menu_select.play();
            break;
            case 9://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from save menu. - button selected.");
            break;
            case 65533://menu choice changed
                sound.menu_move.play();
            break;
            case 65534://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from save menu. - escape preses.");
            break;
            case 65535://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from save menu. - button clicked.");
            break;
            default:
            break;
        };
    };
    // ------------------- Options Menu ------------
    activated_button = -1;
    if (game.menu_level == 7)
    {
        activated_button = options_menu.process();
        switch (activated_button)
        {
            case 1://

            break;
            case 9://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Options menu. - button selected.");
            break;
            case 65533://menu choice changed
                sound.menu_move.play();
            break;
            case 65534://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Options menu. - escape preses.");
            break;
            case 65535://Return to main menu
                sound.menu_select.play();
                game.menu_level = 1;
                game.log.File_Write("Entering main menu, from Options menu. - button clicked.");
            break;
            default:
            break;
        };
    };
//---------------------------------------------------------------------------------------------------------------






// - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD -

        game.io.keyboard_delay_count++;
        if (game.io.keyboard_delay_count > game.io.keyboard_delay) game.io.keyboard_delay_count = game.io.keyboard_delay;
        if ((game.io.escape) && (game.io.keyboard_delay_count >= game.io.keyboard_delay))
              {
                 game.io.keyboard_delay_count = 0;
                 sound.menu_select.play();
                 switch (menu.level)
                 {
                    case 0://main menu
                       game.status_quit_active = true;
                       game.log.File_Write("User terminating game - used escape key!");
                    break;
                    case 1://game menu
                       menu.possition = 0;
                       menu.level = 0;
                       menu.possition_max = 4;
                       game.log.File_Write("Entering 'main' menu.");
                    break;
                    case 2: // options menu
                       menu.possition = 3;
                       menu.level = 0;
                       menu.possition_max = 4;
                       game.log.File_Write("Entering 'main' menu.");
                    break;
                    case 3: // customize starship menu
                       menu.possition = 2;
                       menu.level = 1;
                       menu.possition_max = 6;
                       game.log.File_Write("Entering 'new game' menu.");
                    break;
                    case 4: // star map menu
                       menu.possition = 0;
                       menu.level = 1;
                       menu.possition_max = 6;
                       game.log.File_Write("Entering 'new game' menu.");
                    break;
                    case 5: // save game menu
                       menu.possition = 4;
                       menu.level = 1;
                       menu.possition_max = 6;
                       game.log.File_Write("Entering 'new game' menu.");
                    break;
                    case 6: // load game menu
                       menu.possition = 5;
                       menu.level = 1;
                       menu.possition_max = 6;
                       game.log.File_Write("Entering 'new game' menu.");
                    break;
                    case 7: // Achievements menu
                       menu.possition = 1;
                       menu.level = 1;
                       menu.possition_max = 6;
                       game.log.File_Write("Entering 'new game' menu.");
                    break;
                    default:
                       game.log.File_Write("Undefined menu choice, quiting.");
                       game.status_quit_active = true;
                 }
              }
        if ((game.io.up) && (game.io.keyboard_delay_count >= game.io.keyboard_delay))
              {
                 game.io.keyboard_delay_count = 0;
                 if (menu.level == 0)//main menu
                 {
                 menu.possition--;
                 if (menu.possition < 0) menu.possition = 0;
                 else sound.menu_move.play();
                 }
                 if (menu.level == 1)//new game menu
                 {
                 menu.possition--;
                 if (menu.possition < 0) menu.possition = 0;
                 else sound.menu_move.play();
                 }
                 if (menu.level == 2)//options menu
                 {
                 menu.possition--;
                 if (menu.possition < 0) menu.possition = 0;
                 else sound.menu_move.play();
                 }
                 if (menu.level == 3)//customize starship menu
                 {
                 menu.possition--;
                 if (menu.possition < 0) menu.possition = 0;
                 else sound.menu_move.play();
                 }
                 if ((menu.level == 4) && (menu.possition == 3))//star map menu
                 {
                    menu.possition = menu.recall_position;
                    sound.menu_move.play();
                 }
                 if (menu.level == 5)//save game menu
                 {
                    menu.possition--;
                    if (menu.possition < 0) menu.possition = 0;
                    else sound.menu_move.play();
                 }
                 if (menu.level == 6)//load game menu
                 {
                 menu.possition--;
                 if (menu.possition < 0) menu.possition = 0;
                 else sound.menu_move.play();
                 }
                 if (menu.level == 7)//Achievements menu
                 {
                 menu.possition--;
                 if (menu.possition < 0) menu.possition = 0;
                 else sound.menu_move.play();
                 }
              }
        if ((game.io.down) && (game.io.keyboard_delay_count >= game.io.keyboard_delay))
              {
                 game.io.keyboard_delay_count = 0;
                 if (menu.level == 0)//main menu
                 {
                 menu.possition++;
                 if (menu.possition > menu.possition_max) menu.possition = menu.possition_max;
                 else sound.menu_move.play();
                 }
                 if (menu.level == 1)//new game menu
                 {
                 menu.possition++;
                 if (menu.possition > menu.possition_max) menu.possition = menu.possition_max;
                 else sound.menu_move.play();
                 }
                 if (menu.level == 2)//options menu
                 {
                 menu.possition++;
                 if (menu.possition > menu.possition_max) menu.possition = menu.possition_max;
                 else sound.menu_move.play();
                 }
                 if (menu.level == 3)//customize starship menu
                 {
                 menu.possition++;
                 if (menu.possition > menu.possition_max) menu.possition = menu.possition_max;
                 else sound.menu_move.play();
                 }
                 if ((menu.level == 4) && (menu.possition != 3))//star map menu
                 {
                    menu.recall_position = menu.possition;
                    menu.possition = 3;
                    sound.menu_move.play();
                 }
                 if (menu.level == 5)//save game menu
                 {
                 menu.possition++;
                 if (menu.possition > menu.possition_max) menu.possition = menu.possition_max;
                 else sound.menu_move.play();
                 }
                 if (menu.level == 6)//load menu
                 {
                 menu.possition++;
                 if (menu.possition > menu.possition_max) menu.possition = menu.possition_max;
                 else sound.menu_move.play();
                 }
                 if (menu.level == 7)//Achievements menu
                 {
                 menu.possition++;
                 if (menu.possition > menu.possition_max) menu.possition = menu.possition_max;
                 else sound.menu_move.play();
                 }
              }
        if (game.io.left)
            {
                 if ((menu.level == 2) and (menu.possition == 0))//decrease sound volume
              {
                 game.config.Audio_Sound_Volume--;
                 if (game.config.Audio_Sound_Volume < 0) game.config.Audio_Sound_Volume = 0;
                 Mix_Volume(-1,game.config.Audio_Sound_Volume);
              }
              if ((menu.level == 2) and (menu.possition == 1))//decrease music volume
              {
                 game.config.Audio_Music_Volume--;
                 if (game.config.Audio_Music_Volume < 0) game.config.Audio_Music_Volume = 0;
                 Mix_VolumeMusic(game.config.Audio_Music_Volume);
              }
            }
        if ((game.io.left) && (game.io.keyboard_delay_count >= game.io.keyboard_delay))
            {
                game.io.keyboard_delay_count = 0;
              if ((menu.level == 2) and (menu.possition == 2))//disable fullscreen
              {
                 if (game.config.Display_Fullscreen == true)
                 {
                    //kill_textures();
                    SDL_SetVideoMode(game.config.Display_X_Resolution,game.config.Display_Y_Resolution,game.config.Display_BPS,SDL_OPENGL);
                    game.graphics.init_gl(game.config.Display_X_Resolution,game.config.Display_Y_Resolution);
                    load_textures();
                    game.config.Display_Fullscreen   = false;
                  }
              }
                 if ((menu.level == 2) && (menu.possition == 3) && (game.config.Display_resolution != 0))//resolution select <
                 {
                    game.config.Display_resolution--;
                    if (game.config.Display_resolution < 0) game.config.Display_resolution = 0;
                    if (game.config.Display_resolution == 0)
                    {
                       game.config.Display_X_Resolution = 640;
                       game.config.Display_Y_Resolution = 480;
                    }
                    if (game.config.Display_resolution == 1)
                    {
                       game.config.Display_X_Resolution = 800;
                       game.config.Display_Y_Resolution = 600;
                    }
                    if (game.config.Display_resolution == 2)
                    {
                       game.config.Display_X_Resolution = 1024;
                       game.config.Display_Y_Resolution = 768;
                    }
                    if (game.config.Display_resolution == 3)
                    {
                       game.config.Display_X_Resolution = 1280;
                       game.config.Display_Y_Resolution = 1024;
                    }
                    if (game.config.Display_resolution == 4)
                    {
                       game.config.Display_X_Resolution = 1366;
                       game.config.Display_Y_Resolution = 768;
                    }
                    if (game.config.Display_resolution == 5)
                    {
                       game.config.Display_X_Resolution = 1440;
                       game.config.Display_Y_Resolution = 900;
                    }
                    if (game.config.Display_resolution == 6)
                    {
                       game.config.Display_X_Resolution = 1680;
                       game.config.Display_Y_Resolution = 1050;
                    }
                    if (game.config.Display_resolution == 7)
                    {
                       game.config.Display_X_Resolution = 1920;
                       game.config.Display_Y_Resolution = 1080;
                    }
                    game.config.mouse_resolution_x   = game.config.Display_X_Resolution;
                    game.config.mouse_resolution_y   = game.config.Display_Y_Resolution;
                    //kill_textures();
                    if (game.config.Display_Fullscreen == true ) SDL_SetVideoMode(game.config.Display_X_Resolution,game.config.Display_Y_Resolution,game.config.Display_BPS,SDL_OPENGL | SDL_FULLSCREEN);
                    if (game.config.Display_Fullscreen == false) SDL_SetVideoMode(game.config.Display_X_Resolution,game.config.Display_Y_Resolution,game.config.Display_BPS,SDL_OPENGL);
                    game.graphics.init_gl(game.config.Display_X_Resolution,game.config.Display_Y_Resolution);
                    load_textures();
                 }
                 if ((menu.level == 4) && (menu.possition < 3))//star map level select <
                 {
                    if ((menu.possition == 0) && (menu.level_no > 0))
                    {
                       menu.level_no -= 1;
                       if (menu.level_no < 0) menu.level_no = 0;
                       sound.menu_move.play();
                    }
                    menu.possition--;
                    if (menu.possition < 0) menu.possition = 0;
                    else sound.menu_move.play();
                 }
                 if (menu.level == 3)//customize starship
                 {
                    switch (menu.possition)
                    {
                       case 0://front weapon select
                       game_o.player.front_weapon--;
                       if (game_o.player.front_weapon < -1) game_o.player.front_weapon = -1;
                       break;
                       case 1://side weapon select
                       game_o.player.side_weapon--;
                       if (game_o.player.side_weapon < -1) game_o.player.side_weapon = -1;
                       break;
                       case 2://shield select
                       game_o.player.front_shield--;
                       if (game_o.player.front_shield < -1) game_o.player.front_shield = -1;
                       break;
                       case 3://thrusters select
                       game_o.player.thrusters--;
                       if (game_o.player.thrusters < -1) game_o.player.thrusters = -1;
                       break;
                    }
                 sound.menu_move.play();
                 }
              }
        if (game.io.right)
              {
                 if ((menu.level == 2) and (menu.possition == 0))//increase sound volume
                 {
                    game.config.Audio_Sound_Volume++;
                    if (game.config.Audio_Sound_Volume > 128) game.config.Audio_Sound_Volume = 128;
                    Mix_Volume(-1,game.config.Audio_Sound_Volume);
                 }
                 if ((menu.level == 2) and (menu.possition == 1))//increase music volume
                 {
                    game.config.Audio_Music_Volume++;
                    if (game.config.Audio_Music_Volume > 128) game.config.Audio_Music_Volume = 128;
                    Mix_VolumeMusic(game.config.Audio_Music_Volume);
                 }
              }
        if ((game.io.right) && (game.io.keyboard_delay_count >= game.io.keyboard_delay))
              {
                game.io.keyboard_delay_count = 0;
                 if ((menu.level == 2) and (menu.possition == 2))//enable fullscreen
                 {
                    if (game.config.Display_Fullscreen == false)
                    {
                       //kill_textures();
                       SDL_SetVideoMode(game.config.Display_X_Resolution,game.config.Display_Y_Resolution,game.config.Display_BPS,SDL_OPENGL | SDL_FULLSCREEN);
                       game.graphics.init_gl(game.config.Display_X_Resolution,game.config.Display_Y_Resolution);
                       load_textures();
                       game.config.Display_Fullscreen   = true;
                    }
                 }
                 if ((menu.level == 2) && (menu.possition == 3) && (game.config.Display_resolution != 7))//resolution select <
                 {
                    game.config.Display_resolution++;
                    if (game.config.Display_resolution > 7) game.config.Display_resolution = 7;
                    if (game.config.Display_resolution == 0)
                    {
                       game.config.Display_X_Resolution = 640;
                       game.config.Display_Y_Resolution = 480;
                    }
                    if (game.config.Display_resolution == 1)
                    {
                       game.config.Display_X_Resolution = 800;
                       game.config.Display_Y_Resolution = 600;
                    }
                    if (game.config.Display_resolution == 2)
                    {
                       game.config.Display_X_Resolution = 1024;
                       game.config.Display_Y_Resolution = 768;
                    }
                    if (game.config.Display_resolution == 3)
                    {
                       game.config.Display_X_Resolution = 1280;
                       game.config.Display_Y_Resolution = 1024;
                    }
                    if (game.config.Display_resolution == 4)
                    {
                       game.config.Display_X_Resolution = 1366;
                       game.config.Display_Y_Resolution = 768;
                    }
                    if (game.config.Display_resolution == 5)
                    {
                       game.config.Display_X_Resolution = 1440;
                       game.config.Display_Y_Resolution = 900;
                    }
                    if (game.config.Display_resolution == 6)
                    {
                       game.config.Display_X_Resolution = 1680;
                       game.config.Display_Y_Resolution = 1050;
                    }
                    if (game.config.Display_resolution == 7)
                    {
                       game.config.Display_X_Resolution = 1920;
                       game.config.Display_Y_Resolution = 1080;
                    }
                    game.config.mouse_resolution_x   = game.config.Display_X_Resolution;
                    game.config.mouse_resolution_y   = game.config.Display_Y_Resolution;
                    //kill_textures();
                    if (game.config.Display_Fullscreen == true ) SDL_SetVideoMode(game.config.Display_X_Resolution,game.config.Display_Y_Resolution,game.config.Display_BPS,SDL_OPENGL | SDL_FULLSCREEN);
                    if (game.config.Display_Fullscreen == false) SDL_SetVideoMode(game.config.Display_X_Resolution,game.config.Display_Y_Resolution,game.config.Display_BPS,SDL_OPENGL);
                    game.graphics.init_gl(game.config.Display_X_Resolution,game.config.Display_Y_Resolution);
                    load_textures();
                 }
                 if ((menu.level == 4) && (menu.possition < 3))//star map level select <
                 {
                    if ((menu.possition == 2) && (menu.level_no < 22))
                    {
                       menu.level_no += 1;
                       if (menu.level_no > 22) menu.level_no = 22;
                       sound.menu_move.play();
                    }
                    menu.possition++;
                    if (menu.possition > 2) menu.possition = 2;
                    else sound.menu_move.play();
                 }
                 if (menu.level == 3)//customize starship
                 {
                    switch (menu.possition)
                    {
                       case 0://front weapon select
                       if ((game_o.projectile[game_o.player.front_weapon+1].active) && (game_o.player.front_weapon < 6)) game_o.player.front_weapon++;
                       if (game_o.player.front_weapon > 5) game_o.player.front_weapon = 5;
                       break;
                       case 1://side weapon select
                       if ((game_o.projectile[game_o.player.side_weapon+1].active) && (game_o.player.side_weapon < 6)) game_o.player.side_weapon++;
                       if (game_o.player.side_weapon > 5) game_o.player.side_weapon = 5;
                       break;
                       case 2://shield select
                       if ((game_o.shield[game_o.player.front_shield+1].active) && (game_o.player.front_shield < 6)) game_o.player.front_shield++;
                       if (game_o.player.front_shield > 4) game_o.player.front_shield = 4;
                       break;
                       case 3://thrusters select
                       if ((game_o.thruster[game_o.player.thrusters+1].active) && (game_o.player.thrusters < 6)) game_o.player.thrusters++;
                       if (game_o.player.thrusters > 2) game_o.player.thrusters = 2;
                       break;
                    }
                 sound.menu_move.play();
                 }
              }
        if ((game.io.select) && (game.io.keyboard_delay_count >= game.io.keyboard_delay))
              {
                 game.io.keyboard_delay_count = 0;
                 sound.menu_select.play();
                 switch (menu.level)
                 {
                    case 0://main menu
                    break;
                    case 1://game menu
                       switch (menu.possition)
                          {
                             case 0://starmap
                                menu.possition = 0;
                                menu.level = 4;
                                menu.possition_max = 3;
                                game.log.File_Write("Entering 'star map' menu.");
                             break;
                             case 1://achievements
                                menu.possition = 0;
                                menu.level = 7;
                                menu.possition_max = 0;
                                game.log.File_Write("Entering 'Achievements' menu.");
                             break;
                             case 2://customize starship
                                menu.possition = 0;
                                menu.level = 3;
                                menu.possition_max = 4;
                                game.log.File_Write("Entering 'customize starship' menu.");
                             break;
                             case 3://resume game
                                if (game.game_resume)
                                {
                                   game.music_next_track = true;
                                   game.game_active    = true;
                                   game.menu_active    = false;
                                   game.log.File_Write("Resuming game_o.");
                                }
                             break;
                             case 4://save game
                                if (game.game_resume)
                                {
                                   menu.possition = 0;
                                   menu.level = 5;
                                   menu.possition_max = 5;
                                   game.log.File_Write("Entering 'save game' menu.");
                                }
                             break;
                             case 5://load game
                                menu.possition = 0;
                                menu.level = 6;
                                menu.possition_max = 5;
                                game.log.File_Write("Entering 'load game' menu.");
                             break;
                             case 6://main menu
                                menu.possition = 0;
                                menu.level = 0;
                                menu.possition_max = 4;
                                game.log.File_Write("Entering 'main' menu.");
                             break;
                          }
                       break;
                    case 2: // options menu
                       switch (menu.possition)
                          {
                             case 0://sound volume
                             break;
                             case 1://music volume
                             break;
                             case 2://full screen
                             break;
                             case 3://resolution
                             break;
                             case 4://main menu
                                menu.possition = 0;
                                menu.level = 0;
                                menu.possition_max = 4;
                                game.log.File_Write("Entering 'main' menu.");
                             break;
                          }
                       break;
                    case 3: // customize starship menu
                       switch (menu.possition)
                          {
                             case 0:
                             break;
                             case 1:
                             break;
                             case 2:
                             break;
                             case 3:
                             break;
                             case 4://game menu
                                menu.possition = 2;
                                menu.level = 1;
                                menu.possition_max = 6;
                                game.log.File_Write("Entering 'game' menu.");
                             break;
                          }
                       break;
                    case 4: // star map menu
                       switch (menu.possition)
                          {
                             case 0://level x+0 select
                                if (!game_o.level_locked[menu.level_no + 0])
                                {
                                   game.music_next_track = true;
                                   game_o.level = menu.level_no + 0;
                                   init_game_level(game_o.level);
                                   game.game_active = true;
                                   game.menu_active = false;
                                   game.log.File_Write("Starting level ");
                                }
                             break;
                             case 1://level x+1 select
                                if (!game_o.level_locked[menu.level_no + 1])
                                {
                                   game.music_next_track = true;
                                   game_o.level = menu.level_no + 1;
                                   init_game_level(game_o.level);
                                   game.game_active = true;
                                   game.menu_active = false;
                                   game.log.File_Write("Starting level ");
                                }
                             break;
                             case 2://level x+2 select
                                if (!game_o.level_locked[menu.level_no + 2])
                                {
                                   game.music_next_track = true;
                                   game_o.level = menu.level_no + 2;
                                   init_game_level(game_o.level);
                                   game.game_active = true;
                                   game.menu_active = false;
                                   game.log.File_Write("Starting level ");
                                }
                             break;
                             case 3://game menu
                                menu.possition = 0;
                                menu.level = 1;
                                menu.possition_max = 6;
                                game.log.File_Write("Entering 'game' menu.");
                             break;
                          }
                        break;
                    case 5: // save game menu
                       switch (menu.possition)
                          {
                             case 0://save to slot 0
//                                save_00.Save();
                                game.log.File_Write("Saving to slot 0");
                                spawn_saved();
                                menu.possition = 3;
                                menu.level = 1;
                                menu.possition_max = 5;
                                game.game_active = true;
                                game.menu_active = false;
                                game.log.File_Write("Resuming game");
                                game.music_next_track = true;
                             break;
                             case 1://save to slot 1
                                save_01.Save();
                                game.log.File_Write("Saving to slot 1");
                                spawn_saved();
                                menu.possition = 3;
                                menu.level = 1;
                                menu.possition_max = 5;
                                game.game_active = true;
                                game.menu_active = false;
                                game.log.File_Write("Resuming game");
                                game.music_next_track = true;
                             break;
                             case 2://save to slot 2
                                save_02.Save();
                                game.log.File_Write("Saving to slot 2");
                                spawn_saved();
                                menu.possition = 3;
                                menu.level = 1;
                                menu.possition_max = 5;
                                game.game_active = true;
                                game.menu_active = false;
                                game.log.File_Write("Resuming game");
                                game.music_next_track = true;
                             break;
                             case 3://save to slot 3
                                save_03.Save();
                                game.log.File_Write("Saving to slot 3");
                                spawn_saved();
                                menu.possition = 3;
                                menu.level = 1;
                                menu.possition_max = 5;
                                game.game_active = true;
                                game.menu_active = false;
                                game.log.File_Write("Resuming game");
                                game.music_next_track = true;
                             break;
                             case 4://save to slot 4
                                save_04.Save();
                                game.log.File_Write("Saving to slot 4");
                                spawn_saved();
                                menu.possition = 3;
                                menu.level = 1;
                                menu.possition_max = 5;
                                game.game_active = true;
                                game.menu_active = false;
                                game.log.File_Write("Resuming game");
                                game.music_next_track = true;
                             break;
                             case 5://game menu
                                menu.possition = 4;
                                menu.level = 1;
                                menu.possition_max = 6;
                                game.log.File_Write("Entering 'game' menu.");
                            break;
                          }
                       break;
                    case 6: // load game menu
                       switch (menu.possition)
                          {
                             case 0://load from slot 0
                                if (save_01.Load())
                                {
                                   game.log.File_Write("Loading from slot 0");
                                   spawn_loaded();
                                   menu.possition = 3;
                                   menu.level = 1;
                                   menu.possition_max = 5;
                                   game.game_active = true;
                                   game.menu_active = false;
                                   game.log.File_Write("Resuming game");
                                   game.music_next_track = true;
                                }
                                else game.log.File_Write("Error loadng from slot 0");
                             break;
                             case 1://load from slot 1
                                if (save_01.Load())
                                {
                                   game.log.File_Write("Loading from slot 1");
                                   spawn_loaded();
                                   menu.possition = 3;
                                   menu.level = 1;
                                   menu.possition_max = 5;
                                   game.game_active = true;
                                   game.menu_active = false;
                                   game.log.File_Write("Resuming game");
                                   game.music_next_track = true;
                                }
                                else game.log.File_Write("Error loadng from slot 1");
                             break;
                             case 2://load from slot 2
                                if (save_02.Load())
                                {
                                   game.log.File_Write("Loading from slot 2");
                                   spawn_loaded();
                                   menu.possition = 3;
                                   menu.level = 1;
                                   menu.possition_max = 5;
                                   game.game_active = true;
                                   game.menu_active = false;
                                   game.log.File_Write("Resuming game");
                                   game.music_next_track = true;
                                }
                                else game.log.File_Write("Error loadng from slot 2");
                             break;
                             case 3://load from slot 3
                                if (save_03.Load())
                                {
                                   game.log.File_Write("Loading from slot 3");
                                   spawn_loaded();
                                   menu.possition = 3;
                                   menu.level = 1;
                                   menu.possition_max = 5;
                                   game.game_active = true;
                                   game.menu_active = false;
                                   game.log.File_Write("Resuming game");
                                   game.music_next_track = true;
                                }
                                else game.log.File_Write("Error loadng from slot 3");
                             break;
                             case 4://load from slot 4
                                if (save_04.Load())
                                {
                                   game.log.File_Write("Loading from slot 4");
                                   spawn_loaded();
                                   menu.possition = 3;
                                   menu.level = 1;
                                   menu.possition_max = 5;
                                   game.game_active = true;
                                   game.menu_active = false;
                                   game.log.File_Write("Resuming game");
                                   game.music_next_track = true;
                                }
                                else game.log.File_Write("Error loadng from slot 4");
                             break;
                             case 5://game menu
                                menu.possition = 5;
                                menu.level = 1;
                                menu.possition_max = 6;
                                game.log.File_Write("Entering 'game' menu.");
                             break;
                             default:
                             break;

                          }
                    case 7: // Achievements menu
                       switch (menu.possition)
                          {
                             case 0://game menu
                                menu.possition = 1;
                                menu.level = 1;
                                menu.possition_max = 6;
                                game.log.File_Write("Entering 'game' menu.");
                             break;
                          }
                       break;
                    default:
                       sound.menu_select.play();
                 }
              }
   return(0);
};

   //---------------------------------------------------------------------------------------
int diplay_menu (void)
{
    glPushMatrix();
    glDisable(GL_DEPTH_TEST);
    game.background.draw();
/*-----------------------------------------------------------------------------*/
    bind_texture(30); //logo
    glLoadIdentity();
    glBegin( GL_QUADS );
	glTexCoord2i( 0, 1 );glVertex3f(-0.9f, 0.75f, 0.0f );
	glTexCoord2i( 0, 0 );glVertex3f(-0.9f, 1.0f, 0.0f );
  	glTexCoord2i( 1, 0 );glVertex3f( 0.9f, 1.0f, 0.0f );
    glTexCoord2i( 1, 1 );glVertex3f( 0.9f, 0.75f, 0.0f );
    glEnd();
/*-----------------------------------------------------------------------------*/
   if (game.menu_level == 1) main_menu.draw();//main_menu
   if (game.menu_level == 2) star_map_menu.draw();//star_map_menu
   if (game.menu_level == 3) customize_starship_menu.draw();//customize_starship_menu
   if (game.menu_level == 4) achievements_menu.draw();//achievements_menu
   if (game.menu_level == 5) load_menu.draw();//load_menu
   if (game.menu_level == 6) save_menu.draw();//save_menu
   if (game.menu_level == 7) options_menu.draw();//options_menu







//- OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD -
//- OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD -
//- OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD -
//- OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD - OLD -

/*-----------------------------------------------------------------------------*/
   if (menu.level == 8) //Player death screen
   {
      bind_texture(84); //background 01
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-2.0f + menu.background_scroll[0].x_pos,-2.0f + menu.background_scroll[0].y_pos, 0.15f );
	  glTexCoord2i( 0, 0 );glVertex3f(-2.0f + menu.background_scroll[0].x_pos, 2.0f + menu.background_scroll[0].y_pos, 0.15f );
	  glTexCoord2i( 1, 0 );glVertex3f( 2.0f + menu.background_scroll[0].x_pos, 2.0f + menu.background_scroll[0].y_pos, 0.15f );
	  glTexCoord2i( 1, 1 );glVertex3f( 2.0f + menu.background_scroll[0].x_pos,-2.0f + menu.background_scroll[0].y_pos, 0.15f );
      glEnd();

      bind_texture(73); //background 02
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-2.0f + menu.background_scroll[1].x_pos,-2.0f + menu.background_scroll[1].y_pos, 0.1f );
	  glTexCoord2i( 0, 0 );glVertex3f(-2.0f + menu.background_scroll[1].x_pos, 2.0f + menu.background_scroll[1].y_pos, 0.1f );
	  glTexCoord2i( 1, 0 );glVertex3f( 2.0f + menu.background_scroll[1].x_pos, 2.0f + menu.background_scroll[1].y_pos, 0.1f );
	  glTexCoord2i( 1, 1 );glVertex3f( 2.0f + menu.background_scroll[1].x_pos,-2.0f + menu.background_scroll[1].y_pos, 0.1f );
      glEnd();

      bind_texture(330); //logo
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-0.9f, 0.75f, 0.0f );
	  glTexCoord2i( 0, 0 );glVertex3f(-0.9f, 1.0f, 0.0f );
	  glTexCoord2i( 1, 0 );glVertex3f( 0.9f, 1.0f, 0.0f );
	  glTexCoord2i( 1, 1 );glVertex3f( 0.9f, 0.75f, 0.0f );
      glEnd();

      bind_texture(329); //Game Over
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-0.4f, 0.55f, 0.0f );
	  glTexCoord2i( 0, 0 );glVertex3f(-0.4f, 0.75f, 0.0f );
	  glTexCoord2i( 1, 0 );glVertex3f( 0.4f, 0.75f, 0.0f );
	  glTexCoord2i( 1, 1 );glVertex3f( 0.4f, 0.55f, 0.0f );
      glEnd();

      bind_texture(332); //explosion
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-0.6f,-0.70f, 0.0f );
	  glTexCoord2i( 0, 0 );glVertex3f(-0.6f, 0.50f, 0.0f );
	  glTexCoord2i( 1, 0 );glVertex3f( 0.6f, 0.50f, 0.0f );
	  glTexCoord2i( 1, 1 );glVertex3f( 0.6f,-0.70f, 0.0f );
      glEnd();

      bind_texture(331); //Press any key to return to the main menu
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-0.8f,-0.95f, 0.0f );
	  glTexCoord2i( 0, 0 );glVertex3f(-0.8f,-0.75f, 0.0f );
	  glTexCoord2i( 1, 0 );glVertex3f( 0.8f,-0.75f, 0.0f );
	  glTexCoord2i( 1, 1 );glVertex3f( 0.8f,-0.95f, 0.0f );
      glEnd();
   }
/*-----------------------------------------------------------------------------*/
   if (menu.level == 9) //Next level screen
   {
      int level_t = game_o.level + 1;
      if (level_t > 24) level_t = 24;
      bind_texture(63); //background 01
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-2.0f + menu.background_scroll[0].x_pos,-2.0f + menu.background_scroll[0].y_pos, 0.15f );
	  glTexCoord2i( 0, 0 );glVertex3f(-2.0f + menu.background_scroll[0].x_pos, 2.0f + menu.background_scroll[0].y_pos, 0.15f );
	  glTexCoord2i( 1, 0 );glVertex3f( 2.0f + menu.background_scroll[0].x_pos, 2.0f + menu.background_scroll[0].y_pos, 0.15f );
	  glTexCoord2i( 1, 1 );glVertex3f( 2.0f + menu.background_scroll[0].x_pos,-2.0f + menu.background_scroll[0].y_pos, 0.15f );
      glEnd();

      bind_texture(64); //background 02
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-2.0f + menu.background_scroll[1].x_pos,-2.0f + menu.background_scroll[1].y_pos, 0.1f );
	  glTexCoord2i( 0, 0 );glVertex3f(-2.0f + menu.background_scroll[1].x_pos, 2.0f + menu.background_scroll[1].y_pos, 0.1f );
	  glTexCoord2i( 1, 0 );glVertex3f( 2.0f + menu.background_scroll[1].x_pos, 2.0f + menu.background_scroll[1].y_pos, 0.1f );
	  glTexCoord2i( 1, 1 );glVertex3f( 2.0f + menu.background_scroll[1].x_pos,-2.0f + menu.background_scroll[1].y_pos, 0.1f );
      glEnd();

      bind_texture(30); //logo
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-0.9f, 0.75f, 0.0f );
	  glTexCoord2i( 0, 0 );glVertex3f(-0.9f, 1.0f, 0.0f );
	  glTexCoord2i( 1, 0 );glVertex3f( 0.9f, 1.0f, 0.0f );
	  glTexCoord2i( 1, 1 );glVertex3f( 0.9f, 0.75f, 0.0f );
      glEnd();

      bind_texture(333); //Congratulations
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-0.5f, 0.55f, 0.0f );
	  glTexCoord2i( 0, 0 );glVertex3f(-0.5f, 0.75f, 0.0f );
	  glTexCoord2i( 1, 0 );glVertex3f( 0.5f, 0.75f, 0.0f );
	  glTexCoord2i( 1, 1 );glVertex3f( 0.5f, 0.55f, 0.0f );
      glEnd();

      if (game_o.level_locked[level_t])
      {
         bind_texture(335); //level unlocked
         glLoadIdentity();
         glBegin( GL_QUADS );
	     glTexCoord2i( 0, 1 );glVertex3f(-0.5f, 0.35f, 0.0f );
	     glTexCoord2i( 0, 0 );glVertex3f(-0.5f, 0.55f, 0.0f );
	     glTexCoord2i( 1, 0 );glVertex3f( 0.5f, 0.55f, 0.0f );
   	     glTexCoord2i( 1, 1 );glVertex3f( 0.5f, 0.35f, 0.0f );
         glEnd();
      }

      bind_texture(147+level_t); //next level game screen preview
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-0.5f,-0.70f, 0.0f );
	  glTexCoord2i( 0, 0 );glVertex3f(-0.5f, 0.30f, 0.0f );
	  glTexCoord2i( 1, 0 );glVertex3f( 0.5f, 0.30f, 0.0f );
	  glTexCoord2i( 1, 1 );glVertex3f( 0.5f,-0.70f, 0.0f );
      glEnd();

      bind_texture(334); //Press any key to continue
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-0.8f,-0.95f, 0.0f );
	  glTexCoord2i( 0, 0 );glVertex3f(-0.8f,-0.75f, 0.0f );
	  glTexCoord2i( 1, 0 );glVertex3f( 0.8f,-0.75f, 0.0f );
	  glTexCoord2i( 1, 1 );glVertex3f( 0.8f,-0.95f, 0.0f );
      glEnd();

      font.font_1.Write(255,255,255,64,-1.00f,-0.00f,"Level score - ", game_o.level_score);
      font.font_1.Write(255,255,255,64,-1.00f,-0.10f,"Total score - ", game_o.score);
      font.font_1.Write(255,255,255,64,-1.00f,-0.20f,"Level kills - ", game_o.level_kills);
      font.font_1.Write(255,255,255,64,-1.00f,-0.30f,"Total kills - ", game_o.kills);
      font.font_1.Write(255,255,255,64,-1.00f,-0.40f,"Kill rate   - ./'",(((float)game_o.level_kills/(float)game_o.level_spawened)*100));
   }
/*-----------------------------------------------------------------------------*/
   if (menu.level == 10) //Outro screen
   {
      int level_t = game_o.level + 1;
      if (level_t > 24) level_t = 24;
      bind_texture(63); //background 01
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-2.0f + menu.background_scroll[0].x_pos,-2.0f + menu.background_scroll[0].y_pos, 0.15f );
	  glTexCoord2i( 0, 0 );glVertex3f(-2.0f + menu.background_scroll[0].x_pos, 2.0f + menu.background_scroll[0].y_pos, 0.15f );
	  glTexCoord2i( 1, 0 );glVertex3f( 2.0f + menu.background_scroll[0].x_pos, 2.0f + menu.background_scroll[0].y_pos, 0.15f );
	  glTexCoord2i( 1, 1 );glVertex3f( 2.0f + menu.background_scroll[0].x_pos,-2.0f + menu.background_scroll[0].y_pos, 0.15f );
      glEnd();

      bind_texture(64); //background 02
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-2.0f + menu.background_scroll[1].x_pos,-2.0f + menu.background_scroll[1].y_pos, 0.1f );
	  glTexCoord2i( 0, 0 );glVertex3f(-2.0f + menu.background_scroll[1].x_pos, 2.0f + menu.background_scroll[1].y_pos, 0.1f );
	  glTexCoord2i( 1, 0 );glVertex3f( 2.0f + menu.background_scroll[1].x_pos, 2.0f + menu.background_scroll[1].y_pos, 0.1f );
	  glTexCoord2i( 1, 1 );glVertex3f( 2.0f + menu.background_scroll[1].x_pos,-2.0f + menu.background_scroll[1].y_pos, 0.1f );
      glEnd();

      bind_texture(30); //logo
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-0.9f, 0.75f, 0.0f );
	  glTexCoord2i( 0, 0 );glVertex3f(-0.9f, 1.0f,  0.0f );
	  glTexCoord2i( 1, 0 );glVertex3f( 0.9f, 1.0f,  0.0f );
	  glTexCoord2i( 1, 1 );glVertex3f( 0.9f, 0.75f, 0.0f );
      glEnd();

      bind_texture(334); //Press any key to continue
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-0.8f,-0.95f, 0.0f );
	  glTexCoord2i( 0, 0 );glVertex3f(-0.8f,-0.75f, 0.0f );
	  glTexCoord2i( 1, 0 );glVertex3f( 0.8f,-0.75f, 0.0f );
	  glTexCoord2i( 1, 1 );glVertex3f( 0.8f,-0.95f, 0.0f );
      glEnd();

      bind_texture(339); //credits
      glLoadIdentity();
      glBegin( GL_QUADS );
	  glTexCoord2i( 0, 1 );glVertex3f(-1.0f,-1.0f, 0.0f );
	  glTexCoord2i( 0, 0 );glVertex3f(-1.0f, 1.0f, 0.0f );
	  glTexCoord2i( 1, 0 );glVertex3f( 1.0f, 1.0f, 0.0f );
	  glTexCoord2i( 1, 1 );glVertex3f( 1.0f,-1.0f, 0.0f );
      glEnd();
   }
   glPopMatrix();
   return(0);
};

int process_menu_background(void)
{
// -------------------------   background 0  -----------------------------------
   if (menu.background_scroll[0].x_dir == 0)
   {
      menu.background_scroll[0].x_pos -= menu.background_scroll[0].scroll_rate;
      if (menu.background_scroll[0].x_pos < 0.0f) menu.background_scroll[0].x_dir = 1;
   }
   if (menu.background_scroll[0].x_dir == 1)
   {
      menu.background_scroll[0].x_pos += menu.background_scroll[0].scroll_rate;
      if (menu.background_scroll[0].x_pos > 1.0f) menu.background_scroll[0].x_dir = 0;
   }

   if (menu.background_scroll[0].y_dir == 0)
   {
      menu.background_scroll[0].y_pos -= menu.background_scroll[0].scroll_rate;
      if (menu.background_scroll[0].y_pos < 0.0f) menu.background_scroll[0].y_dir = 1;
   }
   if (menu.background_scroll[0].y_dir == 1)
   {
      menu.background_scroll[0].y_pos += menu.background_scroll[0].scroll_rate;
      if (menu.background_scroll[0].y_pos > 0.75f) menu.background_scroll[0].y_dir = 0;
   }
// -------------------------   background 1  -----------------------------------
   if (menu.background_scroll[1].x_dir == 0)
   {
      menu.background_scroll[1].x_pos -= menu.background_scroll[1].scroll_rate;
      if (menu.background_scroll[1].x_pos < 0.0f) menu.background_scroll[1].x_dir = 1;
   }
   if (menu.background_scroll[1].x_dir == 1)
   {
      menu.background_scroll[1].x_pos += menu.background_scroll[1].scroll_rate;
      if (menu.background_scroll[1].x_pos > 1.0f) menu.background_scroll[1].x_dir = 0;
   }

   if (menu.background_scroll[1].y_dir == 0)
   {
      menu.background_scroll[1].y_pos -= menu.background_scroll[1].scroll_rate;
      if (menu.background_scroll[1].y_pos < 0.0f) menu.background_scroll[1].y_dir = 1;
   }
   if (menu.background_scroll[1].y_dir == 1)
   {
      menu.background_scroll[1].y_pos += menu.background_scroll[1].scroll_rate;
      if (menu.background_scroll[1].y_pos > 0.75f) menu.background_scroll[1].y_dir = 0;
   }
};
